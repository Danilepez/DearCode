/*
 * generated by Xtext 2.39.0
 */
grammar InternalDearCode;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package edu.upb.lp.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.upb.lp.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import edu.upb.lp.services.DearCodeGrammarAccess;

}
@parser::members {
	private DearCodeGrammarAccess grammarAccess;

	public void setGrammarAccess(DearCodeGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getCartaAssignment()); }
		(rule__Program__CartaAssignment)
		{ after(grammarAccess.getProgramAccess().getCartaAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCarta
entryRuleCarta
:
{ before(grammarAccess.getCartaRule()); }
	 ruleCarta
{ after(grammarAccess.getCartaRule()); } 
	 EOF 
;

// Rule Carta
ruleCarta 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCartaAccess().getGroup()); }
		(rule__Carta__Group__0)
		{ after(grammarAccess.getCartaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSaludo
entryRuleSaludo
:
{ before(grammarAccess.getSaludoRule()); }
	 ruleSaludo
{ after(grammarAccess.getSaludoRule()); } 
	 EOF 
;

// Rule Saludo
ruleSaludo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSaludoAccess().getGroup()); }
		(rule__Saludo__Group__0)
		{ after(grammarAccess.getSaludoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDespedida
entryRuleDespedida
:
{ before(grammarAccess.getDespedidaRule()); }
	 ruleDespedida
{ after(grammarAccess.getDespedidaRule()); } 
	 EOF 
;

// Rule Despedida
ruleDespedida 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDespedidaAccess().getGroup()); }
		(rule__Despedida__Group__0)
		{ after(grammarAccess.getDespedidaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCuerpo
entryRuleCuerpo
:
{ before(grammarAccess.getCuerpoRule()); }
	 ruleCuerpo
{ after(grammarAccess.getCuerpoRule()); } 
	 EOF 
;

// Rule Cuerpo
ruleCuerpo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getCuerpoAccess().getInstruccionesAssignment()); }
			(rule__Cuerpo__InstruccionesAssignment)
			{ after(grammarAccess.getCuerpoAccess().getInstruccionesAssignment()); }
		)
		(
			{ before(grammarAccess.getCuerpoAccess().getInstruccionesAssignment()); }
			(rule__Cuerpo__InstruccionesAssignment)*
			{ after(grammarAccess.getCuerpoAccess().getInstruccionesAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruccion
entryRuleInstruccion
:
{ before(grammarAccess.getInstruccionRule()); }
	 ruleInstruccion
{ after(grammarAccess.getInstruccionRule()); } 
	 EOF 
;

// Rule Instruccion
ruleInstruccion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstruccionAccess().getAlternatives()); }
		(rule__Instruccion__Alternatives)
		{ after(grammarAccess.getInstruccionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclarar
entryRuleDeclarar
:
{ before(grammarAccess.getDeclararRule()); }
	 ruleDeclarar
{ after(grammarAccess.getDeclararRule()); } 
	 EOF 
;

// Rule Declarar
ruleDeclarar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclararAccess().getGroup()); }
		(rule__Declarar__Group__0)
		{ after(grammarAccess.getDeclararAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReasignar
entryRuleReasignar
:
{ before(grammarAccess.getReasignarRule()); }
	 ruleReasignar
{ after(grammarAccess.getReasignarRule()); } 
	 EOF 
;

// Rule Reasignar
ruleReasignar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReasignarAccess().getGroup()); }
		(rule__Reasignar__Group__0)
		{ after(grammarAccess.getReasignarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntrada
entryRuleEntrada
:
{ before(grammarAccess.getEntradaRule()); }
	 ruleEntrada
{ after(grammarAccess.getEntradaRule()); } 
	 EOF 
;

// Rule Entrada
ruleEntrada 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntradaAccess().getGroup()); }
		(rule__Entrada__Group__0)
		{ after(grammarAccess.getEntradaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSalida
entryRuleSalida
:
{ before(grammarAccess.getSalidaRule()); }
	 ruleSalida
{ after(grammarAccess.getSalidaRule()); } 
	 EOF 
;

// Rule Salida
ruleSalida 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSalidaAccess().getGroup()); }
		(rule__Salida__Group__0)
		{ after(grammarAccess.getSalidaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementoBloque
entryRuleElementoBloque
:
{ before(grammarAccess.getElementoBloqueRule()); }
	 ruleElementoBloque
{ after(grammarAccess.getElementoBloqueRule()); } 
	 EOF 
;

// Rule ElementoBloque
ruleElementoBloque 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementoBloqueAccess().getAlternatives()); }
		(rule__ElementoBloque__Alternatives)
		{ after(grammarAccess.getElementoBloqueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondicional
entryRuleCondicional
:
{ before(grammarAccess.getCondicionalRule()); }
	 ruleCondicional
{ after(grammarAccess.getCondicionalRule()); } 
	 EOF 
;

// Rule Condicional
ruleCondicional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCondicionalAccess().getGroup()); }
		(rule__Condicional__Group__0)
		{ after(grammarAccess.getCondicionalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBucleWhile
entryRuleBucleWhile
:
{ before(grammarAccess.getBucleWhileRule()); }
	 ruleBucleWhile
{ after(grammarAccess.getBucleWhileRule()); } 
	 EOF 
;

// Rule BucleWhile
ruleBucleWhile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBucleWhileAccess().getGroup()); }
		(rule__BucleWhile__Group__0)
		{ after(grammarAccess.getBucleWhileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBucleFor
entryRuleBucleFor
:
{ before(grammarAccess.getBucleForRule()); }
	 ruleBucleFor
{ after(grammarAccess.getBucleForRule()); } 
	 EOF 
;

// Rule BucleFor
ruleBucleFor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBucleForAccess().getGroup()); }
		(rule__BucleFor__Group__0)
		{ after(grammarAccess.getBucleForAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFuncion
entryRuleFuncion
:
{ before(grammarAccess.getFuncionRule()); }
	 ruleFuncion
{ after(grammarAccess.getFuncionRule()); } 
	 EOF 
;

// Rule Funcion
ruleFuncion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuncionAccess().getGroup()); }
		(rule__Funcion__Group__0)
		{ after(grammarAccess.getFuncionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParametroDecl
entryRuleParametroDecl
:
{ before(grammarAccess.getParametroDeclRule()); }
	 ruleParametroDecl
{ after(grammarAccess.getParametroDeclRule()); } 
	 EOF 
;

// Rule ParametroDecl
ruleParametroDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametroDeclAccess().getGroup()); }
		(rule__ParametroDecl__Group__0)
		{ after(grammarAccess.getParametroDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturn
entryRuleReturn
:
{ before(grammarAccess.getReturnRule()); }
	 ruleReturn
{ after(grammarAccess.getReturnRule()); } 
	 EOF 
;

// Rule Return
ruleReturn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnAccess().getGroup()); }
		(rule__Return__Group__0)
		{ after(grammarAccess.getReturnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getOrExpressionParserRuleCall()); }
		ruleOrExpression
		{ after(grammarAccess.getExpressionAccess().getOrExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpression
entryRuleOrExpression
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
		(rule__OrExpression__Group__0)
		{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
		(rule__EqualityExpression__Group__0)
		{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
		(rule__RelationalExpression__Group__0)
		{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
		(rule__AdditiveExpression__Group__0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
		(rule__MultiplicativeExpression__Group__0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
		(rule__UnaryExpression__Alternatives)
		{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
		(rule__PrimaryExpression__Alternatives)
		{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
		(rule__FunctionCall__Group__0)
		{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComment
entryRuleComment
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommentAccess().getValueAssignment()); }
		(rule__Comment__ValueAssignment)
		{ after(grammarAccess.getCommentAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMI_ID
entryRuleMI_ID
:
{ before(grammarAccess.getMI_IDRule()); }
	 ruleMI_ID
{ after(grammarAccess.getMI_IDRule()); } 
	 EOF 
;

// Rule MI_ID
ruleMI_ID 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMI_IDAccess().getNameAssignment()); }
		(rule__MI_ID__NameAssignment)
		{ after(grammarAccess.getMI_IDAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVerboDeclaracion
entryRuleVerboDeclaracion
:
{ before(grammarAccess.getVerboDeclaracionRule()); }
	 ruleVerboDeclaracion
{ after(grammarAccess.getVerboDeclaracionRule()); } 
	 EOF 
;

// Rule VerboDeclaracion
ruleVerboDeclaracion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVerboDeclaracionAccess().getAlternatives()); }
		(rule__VerboDeclaracion__Alternatives)
		{ after(grammarAccess.getVerboDeclaracionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVerboReasignacion
entryRuleVerboReasignacion
:
{ before(grammarAccess.getVerboReasignacionRule()); }
	 ruleVerboReasignacion
{ after(grammarAccess.getVerboReasignacionRule()); } 
	 EOF 
;

// Rule VerboReasignacion
ruleVerboReasignacion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVerboReasignacionAccess().getAlternatives()); }
		(rule__VerboReasignacion__Alternatives)
		{ after(grammarAccess.getVerboReasignacionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArticulo
entryRuleArticulo
:
{ before(grammarAccess.getArticuloRule()); }
	 ruleArticulo
{ after(grammarAccess.getArticuloRule()); } 
	 EOF 
;

// Rule Articulo
ruleArticulo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArticuloAccess().getAlternatives()); }
		(rule__Articulo__Alternatives)
		{ after(grammarAccess.getArticuloAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Saludo__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSaludoAccess().getQueridoKeyword_0_0()); }
		'Querido'
		{ after(grammarAccess.getSaludoAccess().getQueridoKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSaludoAccess().getQueridaKeyword_0_1()); }
		'Querida'
		{ after(grammarAccess.getSaludoAccess().getQueridaKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSaludoAccess().getInspirasUnAmorDentroDeMKeyword_0_2()); }
		'Inspiras un amor dentro de m\u00ED'
		{ after(grammarAccess.getSaludoAccess().getInspirasUnAmorDentroDeMKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getSaludoAccess().getEresLaChispaDeMiAlmaKeyword_0_3()); }
		'Eres la chispa de mi alma'
		{ after(grammarAccess.getSaludoAccess().getEresLaChispaDeMiAlmaKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getSaludoAccess().getTuLuzDespiertaMiSerKeyword_0_4()); }
		'Tu luz despierta mi ser'
		{ after(grammarAccess.getSaludoAccess().getTuLuzDespiertaMiSerKeyword_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Despedida__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDespedidaAccess().getConCariOTuProgramadorKeyword_0_0()); }
		'Con cari\u00F1o, Tu programador'
		{ after(grammarAccess.getDespedidaAccess().getConCariOTuProgramadorKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDespedidaAccess().getEsperoLaNocheParaTenerteConmigoKeyword_0_1()); }
		'Espero la noche para tenerte conmigo'
		{ after(grammarAccess.getDespedidaAccess().getEsperoLaNocheParaTenerteConmigoKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getDespedidaAccess().getTengoLaSuerteDeTenerteSiempreKeyword_0_2()); }
		'Tengo la suerte de tenerte siempre'
		{ after(grammarAccess.getDespedidaAccess().getTengoLaSuerteDeTenerteSiempreKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getDespedidaAccess().getHacesQueMiCorazNSeAcelereKeyword_0_3()); }
		'Haces que mi coraz\u00F3n se acelere'
		{ after(grammarAccess.getDespedidaAccess().getHacesQueMiCorazNSeAcelereKeyword_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruccion__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstruccionAccess().getDeclararParserRuleCall_0()); }
		ruleDeclarar
		{ after(grammarAccess.getInstruccionAccess().getDeclararParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getReasignarParserRuleCall_1()); }
		ruleReasignar
		{ after(grammarAccess.getInstruccionAccess().getReasignarParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getCondicionalParserRuleCall_2()); }
		ruleCondicional
		{ after(grammarAccess.getInstruccionAccess().getCondicionalParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getBucleWhileParserRuleCall_3()); }
		ruleBucleWhile
		{ after(grammarAccess.getInstruccionAccess().getBucleWhileParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getBucleForParserRuleCall_4()); }
		ruleBucleFor
		{ after(grammarAccess.getInstruccionAccess().getBucleForParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getEntradaParserRuleCall_5()); }
		ruleEntrada
		{ after(grammarAccess.getInstruccionAccess().getEntradaParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getSalidaParserRuleCall_6()); }
		ruleSalida
		{ after(grammarAccess.getInstruccionAccess().getSalidaParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getFuncionParserRuleCall_7()); }
		ruleFuncion
		{ after(grammarAccess.getInstruccionAccess().getFuncionParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getFunctionCallParserRuleCall_8()); }
		ruleFunctionCall
		{ after(grammarAccess.getInstruccionAccess().getFunctionCallParserRuleCall_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNMeroKeyword_0()); }
		'n\u00FAmero'
		{ after(grammarAccess.getTypeAccess().getNMeroKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTextoKeyword_1()); }
		'texto'
		{ after(grammarAccess.getTypeAccess().getTextoKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getBooleanoKeyword_2()); }
		'booleano'
		{ after(grammarAccess.getTypeAccess().getBooleanoKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrada__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntradaAccess().getLePedAlLectorQueMeDijeraKeyword_0_0()); }
		'Le ped\u00ED al lector que me dijera'
		{ after(grammarAccess.getEntradaAccess().getLePedAlLectorQueMeDijeraKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntradaAccess().getLeKeyword_0_1()); }
		'Le'
		{ after(grammarAccess.getEntradaAccess().getLeKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getEntradaAccess().getEscuchoTuVozEnElVientoKeyword_0_2()); }
		'Escucho tu voz en el viento'
		{ after(grammarAccess.getEntradaAccess().getEscuchoTuVozEnElVientoKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getEntradaAccess().getAtrapoUnSuspiroTuyoKeyword_0_3()); }
		'Atrapo un suspiro tuyo'
		{ after(grammarAccess.getEntradaAccess().getAtrapoUnSuspiroTuyoKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getEntradaAccess().getRecojoTusPalabrasComoPTalosAlAlbaKeyword_0_4()); }
		'Recojo tus palabras como p\u00E9talos al alba'
		{ after(grammarAccess.getEntradaAccess().getRecojoTusPalabrasComoPTalosAlAlbaKeyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getEntradaAccess().getTuAlientoMeHablaEnSilencioKeyword_0_5()); }
		'Tu aliento me habla en silencio'
		{ after(grammarAccess.getEntradaAccess().getTuAlientoMeHablaEnSilencioKeyword_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getEntradaAccess().getAcaricioElEcoDeTuVozKeyword_0_6()); }
		'Acaricio el eco de tu voz'
		{ after(grammarAccess.getEntradaAccess().getAcaricioElEcoDeTuVozKeyword_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getEntradaAccess().getGuardoTusSecretosEnMiPechoKeyword_0_7()); }
		'Guardo tus secretos en mi pecho'
		{ after(grammarAccess.getEntradaAccess().getGuardoTusSecretosEnMiPechoKeyword_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getEntradaAccess().getEsperoTuSusurroComoUnAmanecerKeyword_0_8()); }
		'Espero tu susurro como un amanecer'
		{ after(grammarAccess.getEntradaAccess().getEsperoTuSusurroComoUnAmanecerKeyword_0_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrada__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntradaAccess().getEnUnSusurroNumRicoKeyword_2_0()); }
		'en un susurro num\u00E9rico'
		{ after(grammarAccess.getEntradaAccess().getEnUnSusurroNumRicoKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntradaAccess().getConPalabrasDeTerciopeloKeyword_2_1()); }
		'con palabras de terciopelo'
		{ after(grammarAccess.getEntradaAccess().getConPalabrasDeTerciopeloKeyword_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getEntradaAccess().getConUnEcoNumRicoKeyword_2_2()); }
		'con un eco num\u00E9rico'
		{ after(grammarAccess.getEntradaAccess().getConUnEcoNumRicoKeyword_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getEntradaAccess().getEnUnLatidoSuaveKeyword_2_3()); }
		'en un latido suave'
		{ after(grammarAccess.getEntradaAccess().getEnUnLatidoSuaveKeyword_2_3()); }
	)
	|
	(
		{ before(grammarAccess.getEntradaAccess().getComoUnVersoEscritoEnElCieloKeyword_2_4()); }
		'como un verso escrito en el cielo'
		{ after(grammarAccess.getEntradaAccess().getComoUnVersoEscritoEnElCieloKeyword_2_4()); }
	)
	|
	(
		{ before(grammarAccess.getEntradaAccess().getEnvueltoEnLaLuzDeTusOjosKeyword_2_5()); }
		'envuelto en la luz de tus ojos'
		{ after(grammarAccess.getEntradaAccess().getEnvueltoEnLaLuzDeTusOjosKeyword_2_5()); }
	)
	|
	(
		{ before(grammarAccess.getEntradaAccess().getConElPerfumeDeTuEsenciaKeyword_2_6()); }
		'con el perfume de tu esencia'
		{ after(grammarAccess.getEntradaAccess().getConElPerfumeDeTuEsenciaKeyword_2_6()); }
	)
	|
	(
		{ before(grammarAccess.getEntradaAccess().getDanzandoEnElCompSDeMiCorazNKeyword_2_7()); }
		'danzando en el comp\u00E1s de mi coraz\u00F3n'
		{ after(grammarAccess.getEntradaAccess().getDanzandoEnElCompSDeMiCorazNKeyword_2_7()); }
	)
	|
	(
		{ before(grammarAccess.getEntradaAccess().getTejiendoSueOsConTusLetrasKeyword_2_8()); }
		'tejiendo sue\u00F1os con tus letras'
		{ after(grammarAccess.getEntradaAccess().getTejiendoSueOsConTusLetrasKeyword_2_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salida__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSalidaAccess().getHoyLeQuiseContarAlMundoSobreKeyword_0_0()); }
		'Hoy le quise contar al mundo sobre:'
		{ after(grammarAccess.getSalidaAccess().getHoyLeQuiseContarAlMundoSobreKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSalidaAccess().getDejoQueElMundoSientaSobreKeyword_0_1()); }
		'Dejo que el mundo sienta sobre:'
		{ after(grammarAccess.getSalidaAccess().getDejoQueElMundoSientaSobreKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSalidaAccess().getSusurroAlUniversoElSecretoSobreKeyword_0_2()); }
		'Susurro al universo el secreto sobre:'
		{ after(grammarAccess.getSalidaAccess().getSusurroAlUniversoElSecretoSobreKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getSalidaAccess().getGraboEnElFirmamentoMiVerdadAcercaDeKeyword_0_3()); }
		'Grabo en el firmamento mi verdad acerca de:'
		{ after(grammarAccess.getSalidaAccess().getGraboEnElFirmamentoMiVerdadAcercaDeKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getSalidaAccess().getCantoAlVientoMiAnheloDeKeyword_0_4()); }
		'Canto al viento mi anhelo de:'
		{ after(grammarAccess.getSalidaAccess().getCantoAlVientoMiAnheloDeKeyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getSalidaAccess().getEnvOAlHorizonteMiPasiNSobreKeyword_0_5()); }
		'Env\u00EDo al horizonte mi pasi\u00F3n sobre:'
		{ after(grammarAccess.getSalidaAccess().getEnvOAlHorizonteMiPasiNSobreKeyword_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getSalidaAccess().getDejoQueLasNubesAbracenMiVozEnKeyword_0_6()); }
		'Dejo que las nubes abracen mi voz en:'
		{ after(grammarAccess.getSalidaAccess().getDejoQueLasNubesAbracenMiVozEnKeyword_0_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementoBloque__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementoBloqueAccess().getInstruccionParserRuleCall_0()); }
		ruleInstruccion
		{ after(grammarAccess.getElementoBloqueAccess().getInstruccionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementoBloqueAccess().getReturnParserRuleCall_1()); }
		ruleReturn
		{ after(grammarAccess.getElementoBloqueAccess().getReturnParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondicionalAccess().getSiEnTuCorazonSientesQueKeyword_0_0()); }
		'Si en tu corazon sientes que'
		{ after(grammarAccess.getCondicionalAccess().getSiEnTuCorazonSientesQueKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCondicionalAccess().getSiTuAlmaSusurraQueKeyword_0_1()); }
		'Si tu alma susurra que'
		{ after(grammarAccess.getCondicionalAccess().getSiTuAlmaSusurraQueKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCondicionalAccess().getSiElLatidoDeMiAlmaDiceQueKeyword_0_2()); }
		'Si el latido de mi alma dice que'
		{ after(grammarAccess.getCondicionalAccess().getSiElLatidoDeMiAlmaDiceQueKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getCondicionalAccess().getSiElDestinoNosSusurraQueKeyword_0_3()); }
		'Si el destino nos susurra que'
		{ after(grammarAccess.getCondicionalAccess().getSiElDestinoNosSusurraQueKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getCondicionalAccess().getSiLaLunaReflejaQueKeyword_0_4()); }
		'Si la luna refleja que'
		{ after(grammarAccess.getCondicionalAccess().getSiLaLunaReflejaQueKeyword_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondicionalAccess().getEntoncesDejaQueEstasPalabrasFlorezcanKeyword_4_0()); }
		'entonces deja que estas palabras florezcan:'
		{ after(grammarAccess.getCondicionalAccess().getEntoncesDejaQueEstasPalabrasFlorezcanKeyword_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getCondicionalAccess().getEntoncesQueBroteEsteAmorKeyword_4_1()); }
		'entonces que brote este amor:'
		{ after(grammarAccess.getCondicionalAccess().getEntoncesQueBroteEsteAmorKeyword_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getCondicionalAccess().getEntoncesQueNazcaEsteSueOKeyword_4_2()); }
		'entonces que nazca este sue\u00F1o:'
		{ after(grammarAccess.getCondicionalAccess().getEntoncesQueNazcaEsteSueOKeyword_4_2()); }
	)
	|
	(
		{ before(grammarAccess.getCondicionalAccess().getEntoncesQueElUniversoConspireKeyword_4_3()); }
		'entonces que el universo conspire:'
		{ after(grammarAccess.getCondicionalAccess().getEntoncesQueElUniversoConspireKeyword_4_3()); }
	)
	|
	(
		{ before(grammarAccess.getCondicionalAccess().getEntoncesQueMiVozTeAbraceKeyword_4_4()); }
		'entonces que mi voz te abrace:'
		{ after(grammarAccess.getCondicionalAccess().getEntoncesQueMiVozTeAbraceKeyword_4_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Alternatives_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondicionalAccess().getGroup_6_0_0()); }
		(rule__Condicional__Group_6_0_0__0)
		{ after(grammarAccess.getCondicionalAccess().getGroup_6_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCondicionalAccess().getGroup_6_0_1()); }
		(rule__Condicional__Group_6_0_1__0)
		{ after(grammarAccess.getCondicionalAccess().getGroup_6_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCondicionalAccess().getGroup_6_0_2()); }
		(rule__Condicional__Group_6_0_2__0)
		{ after(grammarAccess.getCondicionalAccess().getGroup_6_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Alternatives_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondicionalAccess().getYAsElUniversoSigueSuCursoKeyword_7_0()); }
		'Y as\u00ED el universo sigue su curso.'
		{ after(grammarAccess.getCondicionalAccess().getYAsElUniversoSigueSuCursoKeyword_7_0()); }
	)
	|
	(
		{ before(grammarAccess.getCondicionalAccess().getAsSigueElCantoDelCorazNKeyword_7_1()); }
		'As\u00ED sigue el canto del coraz\u00F3n.'
		{ after(grammarAccess.getCondicionalAccess().getAsSigueElCantoDelCorazNKeyword_7_1()); }
	)
	|
	(
		{ before(grammarAccess.getCondicionalAccess().getYAsLaMelodAContinAKeyword_7_2()); }
		'Y as\u00ED la melod\u00EDa contin\u00FAa.'
		{ after(grammarAccess.getCondicionalAccess().getYAsLaMelodAContinAKeyword_7_2()); }
	)
	|
	(
		{ before(grammarAccess.getCondicionalAccess().getYElEcoDeNuestroAmorPerduraKeyword_7_3()); }
		'Y el eco de nuestro amor perdura.'
		{ after(grammarAccess.getCondicionalAccess().getYElEcoDeNuestroAmorPerduraKeyword_7_3()); }
	)
	|
	(
		{ before(grammarAccess.getCondicionalAccess().getYLaDanzaDeLasEstrellasSigueKeyword_7_4()); }
		'Y la danza de las estrellas sigue.'
		{ after(grammarAccess.getCondicionalAccess().getYLaDanzaDeLasEstrellasSigueKeyword_7_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleWhileAccess().getMientrasAunMePiensasKeyword_0_0()); }
		'Mientras aun me piensas'
		{ after(grammarAccess.getBucleWhileAccess().getMientrasAunMePiensasKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBucleWhileAccess().getMientrasANSueEsConEsteMomentoKeyword_0_1()); }
		'Mientras a\u00FAn sue\u00F1es con este momento'
		{ after(grammarAccess.getBucleWhileAccess().getMientrasANSueEsConEsteMomentoKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getBucleWhileAccess().getMientrasMiCorazNTeAnheleKeyword_0_2()); }
		'Mientras mi coraz\u00F3n te anhele'
		{ after(grammarAccess.getBucleWhileAccess().getMientrasMiCorazNTeAnheleKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getBucleWhileAccess().getMientrasTuLuzMeGuEKeyword_0_3()); }
		'Mientras tu luz me gu\u00EDe'
		{ after(grammarAccess.getBucleWhileAccess().getMientrasTuLuzMeGuEKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getBucleWhileAccess().getMientrasElFuegoDeMiAmorArdaKeyword_0_4()); }
		'Mientras el fuego de mi amor arda'
		{ after(grammarAccess.getBucleWhileAccess().getMientrasElFuegoDeMiAmorArdaKeyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getBucleWhileAccess().getMientrasLaLunaNosIlumineKeyword_0_5()); }
		'Mientras la luna nos ilumine'
		{ after(grammarAccess.getBucleWhileAccess().getMientrasLaLunaNosIlumineKeyword_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getBucleWhileAccess().getMientrasTusOjosMeMirenKeyword_0_6()); }
		'Mientras tus ojos me miren'
		{ after(grammarAccess.getBucleWhileAccess().getMientrasTusOjosMeMirenKeyword_0_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleWhileAccess().getHazQueSucedaKeyword_3_0()); }
		'haz que suceda:'
		{ after(grammarAccess.getBucleWhileAccess().getHazQueSucedaKeyword_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getBucleWhileAccess().getTejiendoEsteAmorKeyword_3_1()); }
		'tejiendo este amor:'
		{ after(grammarAccess.getBucleWhileAccess().getTejiendoEsteAmorKeyword_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getBucleWhileAccess().getDejaQueElTiempoSeDetengaKeyword_3_2()); }
		'deja que el tiempo se detenga:'
		{ after(grammarAccess.getBucleWhileAccess().getDejaQueElTiempoSeDetengaKeyword_3_2()); }
	)
	|
	(
		{ before(grammarAccess.getBucleWhileAccess().getHazQueElUniversoConspireKeyword_3_3()); }
		'haz que el universo conspire:'
		{ after(grammarAccess.getBucleWhileAccess().getHazQueElUniversoConspireKeyword_3_3()); }
	)
	|
	(
		{ before(grammarAccess.getBucleWhileAccess().getPermiteQueElDestinoNosUnaKeyword_3_4()); }
		'permite que el destino nos una:'
		{ after(grammarAccess.getBucleWhileAccess().getPermiteQueElDestinoNosUnaKeyword_3_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleWhileAccess().getYAsElSusurroDescansaKeyword_5_0()); }
		'Y as\u00ED el susurro descansa.'
		{ after(grammarAccess.getBucleWhileAccess().getYAsElSusurroDescansaKeyword_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getBucleWhileAccess().getHastaQueElAnheloReposeKeyword_5_1()); }
		'hasta que el anhelo repose'
		{ after(grammarAccess.getBucleWhileAccess().getHastaQueElAnheloReposeKeyword_5_1()); }
	)
	|
	(
		{ before(grammarAccess.getBucleWhileAccess().getYElSilencioEnvuelveNuestroAmorKeyword_5_2()); }
		'Y el silencio envuelve nuestro amor.'
		{ after(grammarAccess.getBucleWhileAccess().getYElSilencioEnvuelveNuestroAmorKeyword_5_2()); }
	)
	|
	(
		{ before(grammarAccess.getBucleWhileAccess().getHastaQueLaEternidadNosEncuentreKeyword_5_3()); }
		'Hasta que la eternidad nos encuentre.'
		{ after(grammarAccess.getBucleWhileAccess().getHastaQueLaEternidadNosEncuentreKeyword_5_3()); }
	)
	|
	(
		{ before(grammarAccess.getBucleWhileAccess().getYLaPasiNSeConvierteEnRecuerdoKeyword_5_4()); }
		'Y la pasi\u00F3n se convierte en recuerdo.'
		{ after(grammarAccess.getBucleWhileAccess().getYLaPasiNSeConvierteEnRecuerdoKeyword_5_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleForAccess().getEnCadaSuspiroKeyword_0_0()); }
		'En cada suspiro'
		{ after(grammarAccess.getBucleForAccess().getEnCadaSuspiroKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBucleForAccess().getPorCadaLatidoKeyword_0_1()); }
		'Por cada latido'
		{ after(grammarAccess.getBucleForAccess().getPorCadaLatidoKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getBucleForAccess().getPorCadaEstrellaQueNosMiraKeyword_0_2()); }
		'Por cada estrella que nos mira'
		{ after(grammarAccess.getBucleForAccess().getPorCadaEstrellaQueNosMiraKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getBucleForAccess().getEnCadaPTaloDeRosaKeyword_0_3()); }
		'En cada p\u00E9talo de rosa'
		{ after(grammarAccess.getBucleForAccess().getEnCadaPTaloDeRosaKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getBucleForAccess().getPorCadaOlaQueBesaLaOrillaKeyword_0_4()); }
		'Por cada ola que besa la orilla'
		{ after(grammarAccess.getBucleForAccess().getPorCadaOlaQueBesaLaOrillaKeyword_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Alternatives_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleForAccess().getDejaQueElUniversoCanteKeyword_7_0()); }
		'deja que el universo cante:'
		{ after(grammarAccess.getBucleForAccess().getDejaQueElUniversoCanteKeyword_7_0()); }
	)
	|
	(
		{ before(grammarAccess.getBucleForAccess().getResuenaEsteAmorKeyword_7_1()); }
		'resuena este amor'
		{ after(grammarAccess.getBucleForAccess().getResuenaEsteAmorKeyword_7_1()); }
	)
	|
	(
		{ before(grammarAccess.getBucleForAccess().getQueElVientoSusurreNuestroNombreKeyword_7_2()); }
		'que el viento susurre nuestro nombre:'
		{ after(grammarAccess.getBucleForAccess().getQueElVientoSusurreNuestroNombreKeyword_7_2()); }
	)
	|
	(
		{ before(grammarAccess.getBucleForAccess().getQueElCieloPinteNuestroAmorKeyword_7_3()); }
		'que el cielo pinte nuestro amor:'
		{ after(grammarAccess.getBucleForAccess().getQueElCieloPinteNuestroAmorKeyword_7_3()); }
	)
	|
	(
		{ before(grammarAccess.getBucleForAccess().getQueLaTierraTiembleConNuestraPasiNKeyword_7_4()); }
		'que la tierra tiemble con nuestra pasi\u00F3n:'
		{ after(grammarAccess.getBucleForAccess().getQueLaTierraTiembleConNuestraPasiNKeyword_7_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Alternatives_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleForAccess().getCuandoElLtimoEcoSeCalleKeyword_9_0()); }
		'Cuando el \u00FAltimo eco se calle.'
		{ after(grammarAccess.getBucleForAccess().getCuandoElLtimoEcoSeCalleKeyword_9_0()); }
	)
	|
	(
		{ before(grammarAccess.getBucleForAccess().getYElEcoSeDesvaneceKeyword_9_1()); }
		'Y el eco se desvanece.'
		{ after(grammarAccess.getBucleForAccess().getYElEcoSeDesvaneceKeyword_9_1()); }
	)
	|
	(
		{ before(grammarAccess.getBucleForAccess().getYLaLtimaEstrellaSeApagueKeyword_9_2()); }
		'Y la \u00FAltima estrella se apague.'
		{ after(grammarAccess.getBucleForAccess().getYLaLtimaEstrellaSeApagueKeyword_9_2()); }
	)
	|
	(
		{ before(grammarAccess.getBucleForAccess().getHastaQueElLtimoPTaloCaigaKeyword_9_3()); }
		'Hasta que el \u00FAltimo p\u00E9talo caiga.'
		{ after(grammarAccess.getBucleForAccess().getHastaQueElLtimoPTaloCaigaKeyword_9_3()); }
	)
	|
	(
		{ before(grammarAccess.getBucleForAccess().getCuandoElMarSeQuedeEnSilencioKeyword_9_4()); }
		'Cuando el mar se quede en silencio.'
		{ after(grammarAccess.getBucleForAccess().getCuandoElMarSeQuedeEnSilencioKeyword_9_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getDejoEnEstasLNeasUnaPromesaLlamadaKeyword_0_0()); }
		'Dejo en estas l\u00EDneas una promesa llamada'
		{ after(grammarAccess.getFuncionAccess().getDejoEnEstasLNeasUnaPromesaLlamadaKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getEscriboEnEstasLNeasUnaIntenciNLlamadaKeyword_0_1()); }
		'Escribo en estas l\u00EDneas una intenci\u00F3n llamada'
		{ after(grammarAccess.getFuncionAccess().getEscriboEnEstasLNeasUnaIntenciNLlamadaKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getEnLaBrisaEscondoUnDeseoLlamadoKeyword_0_2()); }
		'En la brisa escondo un deseo llamado'
		{ after(grammarAccess.getFuncionAccess().getEnLaBrisaEscondoUnDeseoLlamadoKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getGraboEnLasEstrellasUnaPromesaLlamadaKeyword_0_3()); }
		'Grabo en las estrellas una promesa llamada'
		{ after(grammarAccess.getFuncionAccess().getGraboEnLasEstrellasUnaPromesaLlamadaKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getSusurroAlUniversoUnDeseoLlamadoKeyword_0_4()); }
		'Susurro al universo un deseo llamado'
		{ after(grammarAccess.getFuncionAccess().getSusurroAlUniversoUnDeseoLlamadoKeyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getTejoEnElDestinoUnJuramentoLlamadoKeyword_0_5()); }
		'Tejo en el destino un juramento llamado'
		{ after(grammarAccess.getFuncionAccess().getTejoEnElDestinoUnJuramentoLlamadoKeyword_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getEsculpoEnElTiempoUnAnheloLlamadoKeyword_0_6()); }
		'Esculpo en el tiempo un anhelo llamado'
		{ after(grammarAccess.getFuncionAccess().getEsculpoEnElTiempoUnAnheloLlamadoKeyword_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getSusurroALaEternidadUnSueOLlamadoKeyword_0_7()); }
		'Susurro a la eternidad un sue\u00F1o llamado'
		{ after(grammarAccess.getFuncionAccess().getSusurroALaEternidadUnSueOLlamadoKeyword_0_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getQueGuardaEnSuEsenciaKeyword_2_0_0()); }
		'que guarda en su esencia'
		{ after(grammarAccess.getFuncionAccess().getQueGuardaEnSuEsenciaKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getTejiendoKeyword_2_0_1()); }
		'tejiendo'
		{ after(grammarAccess.getFuncionAccess().getTejiendoKeyword_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getQueAbrazaEnSuSerKeyword_2_0_2()); }
		'que abraza en su ser'
		{ after(grammarAccess.getFuncionAccess().getQueAbrazaEnSuSerKeyword_2_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getQueLlevaEnSuAlmaKeyword_2_0_3()); }
		'que lleva en su alma'
		{ after(grammarAccess.getFuncionAccess().getQueLlevaEnSuAlmaKeyword_2_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getQueSusurraEnSuCorazNKeyword_2_0_4()); }
		'que susurra en su coraz\u00F3n'
		{ after(grammarAccess.getFuncionAccess().getQueSusurraEnSuCorazNKeyword_2_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Alternatives_2_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getTambienKeyword_2_2_0_0()); }
		'tambien'
		{ after(grammarAccess.getFuncionAccess().getTambienKeyword_2_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getLlevandoConsigoKeyword_2_2_0_1()); }
		'llevando consigo'
		{ after(grammarAccess.getFuncionAccess().getLlevandoConsigoKeyword_2_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getPrometiendoDevolverKeyword_3_0()); }
		'prometiendo devolver'
		{ after(grammarAccess.getFuncionAccess().getPrometiendoDevolverKeyword_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getJurandoDevolverKeyword_3_1()); }
		'jurando devolver'
		{ after(grammarAccess.getFuncionAccess().getJurandoDevolverKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getCuandoLaPromesaSeCumpleKeyword_5_0()); }
		'Cuando la promesa se cumple:'
		{ after(grammarAccess.getFuncionAccess().getCuandoLaPromesaSeCumpleKeyword_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getCuandoElAmorSeCumplaKeyword_5_1()); }
		'Cuando el amor se cumpla'
		{ after(grammarAccess.getFuncionAccess().getCuandoElAmorSeCumplaKeyword_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Alternatives_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getAsSeSellaLaPromesaKeyword_7_0()); }
		'As\u00ED se sella la promesa.'
		{ after(grammarAccess.getFuncionAccess().getAsSeSellaLaPromesaKeyword_7_0()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getAsSeEternizaKeyword_7_1()); }
		'As\u00ED se eterniza.'
		{ after(grammarAccess.getFuncionAccess().getAsSeEternizaKeyword_7_1()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getYAsNuestroAmorSeInmortalizaKeyword_7_2()); }
		'Y as\u00ED nuestro amor se inmortaliza.'
		{ after(grammarAccess.getFuncionAccess().getYAsNuestroAmorSeInmortalizaKeyword_7_2()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getYElUniversoGuardaNuestroSecretoKeyword_7_3()); }
		'Y el universo guarda nuestro secreto.'
		{ after(grammarAccess.getFuncionAccess().getYElUniversoGuardaNuestroSecretoKeyword_7_3()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getYLaEternidadNosAbrazaKeyword_7_4()); }
		'Y la eternidad nos abraza.'
		{ after(grammarAccess.getFuncionAccess().getYLaEternidadNosAbrazaKeyword_7_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnAccess().getYEntregoAlVientoKeyword_0_0()); }
		'Y entrego al viento'
		{ after(grammarAccess.getReturnAccess().getYEntregoAlVientoKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getReturnAccess().getTeEntregoKeyword_0_1()); }
		'Te entrego'
		{ after(grammarAccess.getReturnAccess().getTeEntregoKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getReturnAccess().getTeOfrezcoConElAlmaKeyword_0_2()); }
		'Te ofrezco con el alma'
		{ after(grammarAccess.getReturnAccess().getTeOfrezcoConElAlmaKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getReturnAccess().getDejoEnTusManosKeyword_0_3()); }
		'Dejo en tus manos'
		{ after(grammarAccess.getReturnAccess().getDejoEnTusManosKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getReturnAccess().getSusurroATuCorazNKeyword_0_4()); }
		'Susurro a tu coraz\u00F3n'
		{ after(grammarAccess.getReturnAccess().getSusurroATuCorazNKeyword_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnAccess().getComoPromesaCumplidaKeyword_2_0()); }
		'como promesa cumplida.'
		{ after(grammarAccess.getReturnAccess().getComoPromesaCumplidaKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getReturnAccess().getConUnSuspiroKeyword_2_1()); }
		'con un suspiro.'
		{ after(grammarAccess.getReturnAccess().getConUnSuspiroKeyword_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getReturnAccess().getComoUnRegaloEternoKeyword_2_2()); }
		'como un regalo eterno.'
		{ after(grammarAccess.getReturnAccess().getComoUnRegaloEternoKeyword_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getReturnAccess().getEnvueltoEnMiAmorKeyword_2_3()); }
		'envuelto en mi amor.'
		{ after(grammarAccess.getReturnAccess().getEnvueltoEnMiAmorKeyword_2_3()); }
	)
	|
	(
		{ before(grammarAccess.getReturnAccess().getConLaEsperanzaDeTuSonrisaKeyword_2_4()); }
		'con la esperanza de tu sonrisa.'
		{ after(grammarAccess.getReturnAccess().getConLaEsperanzaDeTuSonrisaKeyword_2_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getOTalVezKeyword_1_1_0()); }
		'o tal vez'
		{ after(grammarAccess.getOrExpressionAccess().getOTalVezKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrExpressionAccess().getOQuizSKeyword_1_1_1()); }
		'o quiz\u00E1s'
		{ after(grammarAccess.getOrExpressionAccess().getOQuizSKeyword_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getOrExpressionAccess().getOAcasoElAmorPermitaKeyword_1_1_2()); }
		'o acaso el amor permita'
		{ after(grammarAccess.getOrExpressionAccess().getOAcasoElAmorPermitaKeyword_1_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getOrExpressionAccess().getOSiLaLunaLoDeseaKeyword_1_1_3()); }
		'o si la luna lo desea'
		{ after(grammarAccess.getOrExpressionAccess().getOSiLaLunaLoDeseaKeyword_1_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getYTambiNKeyword_1_1_0()); }
		'y tambi\u00E9n'
		{ after(grammarAccess.getAndExpressionAccess().getYTambiNKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAndExpressionAccess().getJuntoAKeyword_1_1_1()); }
		'junto a'
		{ after(grammarAccess.getAndExpressionAccess().getJuntoAKeyword_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getAndExpressionAccess().getYAdemSKeyword_1_1_2()); }
		'y adem\u00E1s'
		{ after(grammarAccess.getAndExpressionAccess().getYAdemSKeyword_1_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getAndExpressionAccess().getYAlMismoTiempoQueKeyword_1_1_3()); }
		'y al mismo tiempo que'
		{ after(grammarAccess.getAndExpressionAccess().getYAlMismoTiempoQueKeyword_1_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getAndExpressionAccess().getYJuntoConKeyword_1_1_4()); }
		'y junto con'
		{ after(grammarAccess.getAndExpressionAccess().getYJuntoConKeyword_1_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getAndExpressionAccess().getYEnUniNConKeyword_1_1_5()); }
		'y en uni\u00F3n con'
		{ after(grammarAccess.getAndExpressionAccess().getYEnUniNConKeyword_1_1_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpLateAlUnSonoConKeyword_1_1_0_0()); }
		'late al un\u00EDsono con'
		{ after(grammarAccess.getEqualityExpressionAccess().getOpLateAlUnSonoConKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpCantaConUnMatizDistintoAKeyword_1_1_0_1()); }
		'canta con un matiz distinto a'
		{ after(grammarAccess.getEqualityExpressionAccess().getOpCantaConUnMatizDistintoAKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpLateIgualQueKeyword_1_1_0_2()); }
		'late igual que'
		{ after(grammarAccess.getEqualityExpressionAccess().getOpLateIgualQueKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpSeDistingueDeKeyword_1_1_0_3()); }
		'se distingue de'
		{ after(grammarAccess.getEqualityExpressionAccess().getOpSeDistingueDeKeyword_1_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpResuenaIgualQueKeyword_1_1_0_4()); }
		'resuena igual que'
		{ after(grammarAccess.getEqualityExpressionAccess().getOpResuenaIgualQueKeyword_1_1_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpVibraAlMismoRitmoQueKeyword_1_1_0_5()); }
		'vibra al mismo ritmo que'
		{ after(grammarAccess.getEqualityExpressionAccess().getOpVibraAlMismoRitmoQueKeyword_1_1_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpEsIdNticoAKeyword_1_1_0_6()); }
		'es id\u00E9ntico a'
		{ after(grammarAccess.getEqualityExpressionAccess().getOpEsIdNticoAKeyword_1_1_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpSeDiferenciaDeKeyword_1_1_0_7()); }
		'se diferencia de'
		{ after(grammarAccess.getEqualityExpressionAccess().getOpSeDiferenciaDeKeyword_1_1_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpNoCoincideConKeyword_1_1_0_8()); }
		'no coincide con'
		{ after(grammarAccess.getEqualityExpressionAccess().getOpNoCoincideConKeyword_1_1_0_8()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpEsDistintoAKeyword_1_1_0_9()); }
		'es distinto a'
		{ after(grammarAccess.getEqualityExpressionAccess().getOpEsDistintoAKeyword_1_1_0_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOpSusurraConMenosFuerzaQueKeyword_1_1_0_0()); }
		'susurra con menos fuerza que'
		{ after(grammarAccess.getRelationalExpressionAccess().getOpSusurraConMenosFuerzaQueKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOpCasiSuspiraAlMismoNivelQueKeyword_1_1_0_1()); }
		'casi suspira al mismo nivel que'
		{ after(grammarAccess.getRelationalExpressionAccess().getOpCasiSuspiraAlMismoNivelQueKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOpArdeConMSPasiNQueKeyword_1_1_0_2()); }
		'arde con m\u00E1s pasi\u00F3n que'
		{ after(grammarAccess.getRelationalExpressionAccess().getOpArdeConMSPasiNQueKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOpRodeaConTantaFuerzaComoKeyword_1_1_0_3()); }
		'rodea con tanta fuerza como'
		{ after(grammarAccess.getRelationalExpressionAccess().getOpRodeaConTantaFuerzaComoKeyword_1_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOpSusurraMenosQueKeyword_1_1_0_4()); }
		'susurra menos que'
		{ after(grammarAccess.getRelationalExpressionAccess().getOpSusurraMenosQueKeyword_1_1_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOpCasiIgualQueKeyword_1_1_0_5()); }
		'casi igual que'
		{ after(grammarAccess.getRelationalExpressionAccess().getOpCasiIgualQueKeyword_1_1_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOpArdeMasQueKeyword_1_1_0_6()); }
		'arde mas que'
		{ after(grammarAccess.getRelationalExpressionAccess().getOpArdeMasQueKeyword_1_1_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOpAbrazaComoKeyword_1_1_0_7()); }
		'abraza como'
		{ after(grammarAccess.getRelationalExpressionAccess().getOpAbrazaComoKeyword_1_1_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOpSusurraMSSuavementeQueKeyword_1_1_0_8()); }
		'susurra m\u00E1s suavemente que'
		{ after(grammarAccess.getRelationalExpressionAccess().getOpSusurraMSSuavementeQueKeyword_1_1_0_8()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOpTieneMenosLatidosQueKeyword_1_1_0_9()); }
		'tiene menos latidos que'
		{ after(grammarAccess.getRelationalExpressionAccess().getOpTieneMenosLatidosQueKeyword_1_1_0_9()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOpSusurraTanSuavementeComoKeyword_1_1_0_10()); }
		'susurra tan suavemente como'
		{ after(grammarAccess.getRelationalExpressionAccess().getOpSusurraTanSuavementeComoKeyword_1_1_0_10()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOpNoSuperaAKeyword_1_1_0_11()); }
		'no supera a'
		{ after(grammarAccess.getRelationalExpressionAccess().getOpNoSuperaAKeyword_1_1_0_11()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOpSusurraConMSFuerzaQueKeyword_1_1_0_12()); }
		'susurra con m\u00E1s fuerza que'
		{ after(grammarAccess.getRelationalExpressionAccess().getOpSusurraConMSFuerzaQueKeyword_1_1_0_12()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOpTieneMSLatidosQueKeyword_1_1_0_13()); }
		'tiene m\u00E1s latidos que'
		{ after(grammarAccess.getRelationalExpressionAccess().getOpTieneMSLatidosQueKeyword_1_1_0_13()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOpSusurraAlMenosConLaMismaFuerzaQueKeyword_1_1_0_14()); }
		'susurra al menos con la misma fuerza que'
		{ after(grammarAccess.getRelationalExpressionAccess().getOpSusurraAlMenosConLaMismaFuerzaQueKeyword_1_1_0_14()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOpAlMenosIgualaAKeyword_1_1_0_15()); }
		'al menos iguala a'
		{ after(grammarAccess.getRelationalExpressionAccess().getOpAlMenosIgualaAKeyword_1_1_0_15()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOpUnidosEnUnSoloSuspiroConKeyword_1_1_0_0()); }
		'unidos en un solo suspiro con'
		{ after(grammarAccess.getAdditiveExpressionAccess().getOpUnidosEnUnSoloSuspiroConKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOpFundidosEnLaLlamaDeKeyword_1_1_0_1()); }
		'fundidos en la llama de'
		{ after(grammarAccess.getAdditiveExpressionAccess().getOpFundidosEnLaLlamaDeKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOpSeUneAKeyword_1_1_0_2()); }
		'se une a'
		{ after(grammarAccess.getAdditiveExpressionAccess().getOpSeUneAKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOpSeFundeConKeyword_1_1_0_3()); }
		'se funde con'
		{ after(grammarAccess.getAdditiveExpressionAccess().getOpSeFundeConKeyword_1_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOpSumadoAlLatidoDeKeyword_1_1_0_4()); }
		'sumado al latido de'
		{ after(grammarAccess.getAdditiveExpressionAccess().getOpSumadoAlLatidoDeKeyword_1_1_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOpCombinadoConLaPasiNDeKeyword_1_1_0_5()); }
		'combinado con la pasi\u00F3n de'
		{ after(grammarAccess.getAdditiveExpressionAccess().getOpCombinadoConLaPasiNDeKeyword_1_1_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOpEntrelazadoConKeyword_1_1_0_6()); }
		'entrelazado con'
		{ after(grammarAccess.getAdditiveExpressionAccess().getOpEntrelazadoConKeyword_1_1_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOpAAdidoAlSuspiroDeKeyword_1_1_0_7()); }
		'a\u00F1adido al suspiro de'
		{ after(grammarAccess.getAdditiveExpressionAccess().getOpAAdidoAlSuspiroDeKeyword_1_1_0_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpFortalecidosPorElFuegoDeKeyword_1_1_0_0()); }
		'fortalecidos por el fuego de'
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpFortalecidosPorElFuegoDeKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpSeparadosEntreLosEcosDeKeyword_1_1_0_1()); }
		'separados entre los ecos de'
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpSeparadosEntreLosEcosDeKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpResuenaConElEcoDeKeyword_1_1_0_2()); }
		'resuena con el eco de'
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpResuenaConElEcoDeKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpCreceConKeyword_1_1_0_3()); }
		'crece con'
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpCreceConKeyword_1_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpResuenaEnKeyword_1_1_0_4()); }
		'resuena en'
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpResuenaEnKeyword_1_1_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpSeDivideEntreKeyword_1_1_0_5()); }
		'se divide entre'
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpSeDivideEntreKeyword_1_1_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
		(rule__UnaryExpression__Group_0__0)
		{ after(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_1()); }
		rulePrimaryExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OpAlternatives_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOpNoCreoQueKeyword_0_1_0_0()); }
		'no creo que'
		{ after(grammarAccess.getUnaryExpressionAccess().getOpNoCreoQueKeyword_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOpNoSientoQueKeyword_0_1_0_1()); }
		'no siento que'
		{ after(grammarAccess.getUnaryExpressionAccess().getOpNoSientoQueKeyword_0_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOpNoMePareceQueKeyword_0_1_0_2()); }
		'no me parece que'
		{ after(grammarAccess.getUnaryExpressionAccess().getOpNoMePareceQueKeyword_0_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOpNoPerciboQueKeyword_0_1_0_3()); }
		'no percibo que'
		{ after(grammarAccess.getUnaryExpressionAccess().getOpNoPerciboQueKeyword_0_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOpDudoQueKeyword_0_1_0_4()); }
		'dudo que'
		{ after(grammarAccess.getUnaryExpressionAccess().getOpDudoQueKeyword_0_1_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
		(rule__PrimaryExpression__Group_0__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
		(rule__PrimaryExpression__Group_1__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
		(rule__PrimaryExpression__Group_2__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
		(rule__PrimaryExpression__Group_3__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
		(rule__PrimaryExpression__Group_4__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getFunctionCallParserRuleCall_5()); }
		ruleFunctionCall
		{ after(grammarAccess.getPrimaryExpressionAccess().getFunctionCallParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ValueBooleanAlternatives_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getValueBooleanSiempreKeyword_3_1_0_0()); }
		'siempre'
		{ after(grammarAccess.getPrimaryExpressionAccess().getValueBooleanSiempreKeyword_3_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getValueBooleanJamSKeyword_3_1_0_1()); }
		'jam\u00E1s'
		{ after(grammarAccess.getPrimaryExpressionAccess().getValueBooleanJamSKeyword_3_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getInvocoAKeyword_1_0()); }
		'invoco a'
		{ after(grammarAccess.getFunctionCallAccess().getInvocoAKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallAccess().getSusurroAKeyword_1_1()); }
		'susurro a'
		{ after(grammarAccess.getFunctionCallAccess().getSusurroAKeyword_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallAccess().getMurmuroAKeyword_1_2()); }
		'murmuro a'
		{ after(grammarAccess.getFunctionCallAccess().getMurmuroAKeyword_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallAccess().getConjuroAKeyword_1_3()); }
		'conjuro a'
		{ after(grammarAccess.getFunctionCallAccess().getConjuroAKeyword_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Alternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getConLosRegalosKeyword_3_0_0()); }
		'con los regalos'
		{ after(grammarAccess.getFunctionCallAccess().getConLosRegalosKeyword_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallAccess().getOfreciendoKeyword_3_0_1()); }
		'ofreciendo'
		{ after(grammarAccess.getFunctionCallAccess().getOfreciendoKeyword_3_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallAccess().getConLosDonesKeyword_3_0_2()); }
		'con los dones'
		{ after(grammarAccess.getFunctionCallAccess().getConLosDonesKeyword_3_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallAccess().getPresentandoKeyword_3_0_3()); }
		'presentando'
		{ after(grammarAccess.getFunctionCallAccess().getPresentandoKeyword_3_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallAccess().getOfreciendoMisTesorosKeyword_3_0_4()); }
		'ofreciendo mis tesoros'
		{ after(grammarAccess.getFunctionCallAccess().getOfreciendoMisTesorosKeyword_3_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Alternatives_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getAsimismoKeyword_3_1_1_0()); }
		'asimismo'
		{ after(grammarAccess.getFunctionCallAccess().getAsimismoKeyword_3_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallAccess().getGroup_3_1_1_1()); }
		(rule__FunctionCall__Group_3_1_1_1__0)
		{ after(grammarAccess.getFunctionCallAccess().getGroup_3_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Alternatives_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getEnMiCorazNKeyword_3_2_0()); }
		'en mi coraz\u00F3n'
		{ after(grammarAccess.getFunctionCallAccess().getEnMiCorazNKeyword_3_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallAccess().getEnMiAlmaKeyword_3_2_1()); }
		'en mi alma'
		{ after(grammarAccess.getFunctionCallAccess().getEnMiAlmaKeyword_3_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerboDeclaracion__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerboDeclaracionAccess().getTeRegaloKeyword_0()); }
		'Te regalo'
		{ after(grammarAccess.getVerboDeclaracionAccess().getTeRegaloKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getVerboDeclaracionAccess().getTeOfrezcoKeyword_1()); }
		'Te Ofrezco'
		{ after(grammarAccess.getVerboDeclaracionAccess().getTeOfrezcoKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getVerboDeclaracionAccess().getObsequioKeyword_2()); }
		'Obsequio'
		{ after(grammarAccess.getVerboDeclaracionAccess().getObsequioKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getVerboDeclaracionAccess().getDepositoEnTuJardNKeyword_3()); }
		'Deposito en tu jard\u00EDn'
		{ after(grammarAccess.getVerboDeclaracionAccess().getDepositoEnTuJardNKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getVerboDeclaracionAccess().getTeReveloKeyword_4()); }
		'Te revelo'
		{ after(grammarAccess.getVerboDeclaracionAccess().getTeReveloKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getVerboDeclaracionAccess().getTeSusurroKeyword_5()); }
		'Te susurro'
		{ after(grammarAccess.getVerboDeclaracionAccess().getTeSusurroKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getVerboDeclaracionAccess().getTeConfOKeyword_6()); }
		'Te conf\u00EDo'
		{ after(grammarAccess.getVerboDeclaracionAccess().getTeConfOKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getVerboDeclaracionAccess().getTeDedicoKeyword_7()); }
		'Te dedico'
		{ after(grammarAccess.getVerboDeclaracionAccess().getTeDedicoKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getVerboDeclaracionAccess().getTeBrindoKeyword_8()); }
		'Te brindo'
		{ after(grammarAccess.getVerboDeclaracionAccess().getTeBrindoKeyword_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerboReasignacion__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerboReasignacionAccess().getPermTemeAlimentarKeyword_0()); }
		'Perm\u00EDteme alimentar'
		{ after(grammarAccess.getVerboReasignacionAccess().getPermTemeAlimentarKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getVerboReasignacionAccess().getPermTemeRegarKeyword_1()); }
		'Perm\u00EDteme regar'
		{ after(grammarAccess.getVerboReasignacionAccess().getPermTemeRegarKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getVerboReasignacionAccess().getPermTemeAjustarKeyword_2()); }
		'Perm\u00EDteme ajustar'
		{ after(grammarAccess.getVerboReasignacionAccess().getPermTemeAjustarKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getVerboReasignacionAccess().getReavivoKeyword_3()); }
		'Reavivo'
		{ after(grammarAccess.getVerboReasignacionAccess().getReavivoKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getVerboReasignacionAccess().getRenuevoKeyword_4()); }
		'Renuevo'
		{ after(grammarAccess.getVerboReasignacionAccess().getRenuevoKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getVerboReasignacionAccess().getReafirmoKeyword_5()); }
		'Reafirmo'
		{ after(grammarAccess.getVerboReasignacionAccess().getReafirmoKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getVerboReasignacionAccess().getPermTemeTransformarKeyword_6()); }
		'Perm\u00EDteme transformar'
		{ after(grammarAccess.getVerboReasignacionAccess().getPermTemeTransformarKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getVerboReasignacionAccess().getRenuevoConPasiNKeyword_7()); }
		'Renuevo con pasi\u00F3n'
		{ after(grammarAccess.getVerboReasignacionAccess().getRenuevoConPasiNKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getVerboReasignacionAccess().getModificoConAmorKeyword_8()); }
		'Modifico con amor'
		{ after(grammarAccess.getVerboReasignacionAccess().getModificoConAmorKeyword_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Articulo__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArticuloAccess().getUnKeyword_0()); }
		'un'
		{ after(grammarAccess.getArticuloAccess().getUnKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getArticuloAccess().getUnaKeyword_1()); }
		'una'
		{ after(grammarAccess.getArticuloAccess().getUnaKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getArticuloAccess().getUnosKeyword_2()); }
		'unos'
		{ after(grammarAccess.getArticuloAccess().getUnosKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getArticuloAccess().getUnasKeyword_3()); }
		'unas'
		{ after(grammarAccess.getArticuloAccess().getUnasKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Carta__Group__0__Impl
	rule__Carta__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCartaAccess().getSaludoAssignment_0()); }
	(rule__Carta__SaludoAssignment_0)
	{ after(grammarAccess.getCartaAccess().getSaludoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Carta__Group__1__Impl
	rule__Carta__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCartaAccess().getCuerpoAssignment_1()); }
	(rule__Carta__CuerpoAssignment_1)
	{ after(grammarAccess.getCartaAccess().getCuerpoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Carta__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCartaAccess().getDespedidaAssignment_2()); }
	(rule__Carta__DespedidaAssignment_2)
	{ after(grammarAccess.getCartaAccess().getDespedidaAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Saludo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Saludo__Group__0__Impl
	rule__Saludo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Saludo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaludoAccess().getAlternatives_0()); }
	(rule__Saludo__Alternatives_0)
	{ after(grammarAccess.getSaludoAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Saludo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Saludo__Group__1__Impl
	rule__Saludo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Saludo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaludoAccess().getNameAssignment_1()); }
	(rule__Saludo__NameAssignment_1)
	{ after(grammarAccess.getSaludoAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Saludo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Saludo__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Saludo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaludoAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getSaludoAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Despedida__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Despedida__Group__0__Impl
	rule__Despedida__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Despedida__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDespedidaAccess().getAlternatives_0()); }
	(rule__Despedida__Alternatives_0)
	{ after(grammarAccess.getDespedidaAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Despedida__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Despedida__Group__1__Impl
	rule__Despedida__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Despedida__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDespedidaAccess().getNameAssignment_1()); }
	(rule__Despedida__NameAssignment_1)
	{ after(grammarAccess.getDespedidaAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Despedida__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Despedida__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Despedida__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDespedidaAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getDespedidaAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declarar__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarar__Group__0__Impl
	rule__Declarar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclararAccess().getVerboDeclAssignment_0()); }
	(rule__Declarar__VerboDeclAssignment_0)
	{ after(grammarAccess.getDeclararAccess().getVerboDeclAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarar__Group__1__Impl
	rule__Declarar__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclararAccess().getArticuloAssignment_1()); }
	(rule__Declarar__ArticuloAssignment_1)
	{ after(grammarAccess.getDeclararAccess().getArticuloAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarar__Group__2__Impl
	rule__Declarar__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclararAccess().getTipoAssignment_2()); }
	(rule__Declarar__TipoAssignment_2)?
	{ after(grammarAccess.getDeclararAccess().getTipoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarar__Group__3__Impl
	rule__Declarar__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclararAccess().getSustantivoAssignment_3()); }
	(rule__Declarar__SustantivoAssignment_3)
	{ after(grammarAccess.getDeclararAccess().getSustantivoAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarar__Group__4__Impl
	rule__Declarar__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclararAccess().getPreComentarioAssignment_4()); }
	(rule__Declarar__PreComentarioAssignment_4)?
	{ after(grammarAccess.getDeclararAccess().getPreComentarioAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarar__Group__5__Impl
	rule__Declarar__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclararAccess().getValorAssignment_5()); }
	(rule__Declarar__ValorAssignment_5)
	{ after(grammarAccess.getDeclararAccess().getValorAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarar__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclararAccess().getPostComentarioAssignment_6()); }
	(rule__Declarar__PostComentarioAssignment_6)?
	{ after(grammarAccess.getDeclararAccess().getPostComentarioAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reasignar__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasignar__Group__0__Impl
	rule__Reasignar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasignarAccess().getVerboReasAssignment_0()); }
	(rule__Reasignar__VerboReasAssignment_0)
	{ after(grammarAccess.getReasignarAccess().getVerboReasAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasignar__Group__1__Impl
	rule__Reasignar__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasignarAccess().getPreComentarioAssignment_1()); }
	(rule__Reasignar__PreComentarioAssignment_1)?
	{ after(grammarAccess.getReasignarAccess().getPreComentarioAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasignar__Group__2__Impl
	rule__Reasignar__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasignarAccess().getSustantivoAssignment_2()); }
	(rule__Reasignar__SustantivoAssignment_2)
	{ after(grammarAccess.getReasignarAccess().getSustantivoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasignar__Group__3__Impl
	rule__Reasignar__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasignarAccess().getPostComentarioAssignment_3()); }
	(rule__Reasignar__PostComentarioAssignment_3)?
	{ after(grammarAccess.getReasignarAccess().getPostComentarioAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasignar__Group__4__Impl
	rule__Reasignar__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasignarAccess().getValorAssignment_4()); }
	(rule__Reasignar__ValorAssignment_4)
	{ after(grammarAccess.getReasignarAccess().getValorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasignar__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasignarAccess().getComentarioAssignment_5()); }
	(rule__Reasignar__ComentarioAssignment_5)?
	{ after(grammarAccess.getReasignarAccess().getComentarioAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entrada__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entrada__Group__0__Impl
	rule__Entrada__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrada__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntradaAccess().getAlternatives_0()); }
	(rule__Entrada__Alternatives_0)
	{ after(grammarAccess.getEntradaAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrada__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entrada__Group__1__Impl
	rule__Entrada__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrada__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntradaAccess().getVariableAssignment_1()); }
	(rule__Entrada__VariableAssignment_1)
	{ after(grammarAccess.getEntradaAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrada__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entrada__Group__2__Impl
	rule__Entrada__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrada__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntradaAccess().getAlternatives_2()); }
	(rule__Entrada__Alternatives_2)?
	{ after(grammarAccess.getEntradaAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrada__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entrada__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrada__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntradaAccess().getFullStopKeyword_3()); }
	'.'
	{ after(grammarAccess.getEntradaAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Salida__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Salida__Group__0__Impl
	rule__Salida__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Salida__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSalidaAccess().getAlternatives_0()); }
	(rule__Salida__Alternatives_0)
	{ after(grammarAccess.getSalidaAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salida__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Salida__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Salida__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSalidaAccess().getExpresionAssignment_1()); }
	(rule__Salida__ExpresionAssignment_1)
	{ after(grammarAccess.getSalidaAccess().getExpresionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condicional__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__0__Impl
	rule__Condicional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getAlternatives_0()); }
	(rule__Condicional__Alternatives_0)
	{ after(grammarAccess.getCondicionalAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__1__Impl
	rule__Condicional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getCondicionAssignment_1()); }
	(rule__Condicional__CondicionAssignment_1)
	{ after(grammarAccess.getCondicionalAccess().getCondicionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__2__Impl
	rule__Condicional__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getCondicionalAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__3__Impl
	rule__Condicional__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getCommentAssignment_3()); }
	(rule__Condicional__CommentAssignment_3)?
	{ after(grammarAccess.getCondicionalAccess().getCommentAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__4__Impl
	rule__Condicional__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getAlternatives_4()); }
	(rule__Condicional__Alternatives_4)
	{ after(grammarAccess.getCondicionalAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__5__Impl
	rule__Condicional__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCondicionalAccess().getInstruccionesThenAssignment_5()); }
		(rule__Condicional__InstruccionesThenAssignment_5)
		{ after(grammarAccess.getCondicionalAccess().getInstruccionesThenAssignment_5()); }
	)
	(
		{ before(grammarAccess.getCondicionalAccess().getInstruccionesThenAssignment_5()); }
		(rule__Condicional__InstruccionesThenAssignment_5)*
		{ after(grammarAccess.getCondicionalAccess().getInstruccionesThenAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__6__Impl
	rule__Condicional__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getGroup_6()); }
	(rule__Condicional__Group_6__0)?
	{ after(grammarAccess.getCondicionalAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getAlternatives_7()); }
	(rule__Condicional__Alternatives_7)
	{ after(grammarAccess.getCondicionalAccess().getAlternatives_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condicional__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group_6__0__Impl
	rule__Condicional__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getAlternatives_6_0()); }
	(rule__Condicional__Alternatives_6_0)
	{ after(grammarAccess.getCondicionalAccess().getAlternatives_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCondicionalAccess().getInstruccionesElseAssignment_6_1()); }
		(rule__Condicional__InstruccionesElseAssignment_6_1)
		{ after(grammarAccess.getCondicionalAccess().getInstruccionesElseAssignment_6_1()); }
	)
	(
		{ before(grammarAccess.getCondicionalAccess().getInstruccionesElseAssignment_6_1()); }
		(rule__Condicional__InstruccionesElseAssignment_6_1)*
		{ after(grammarAccess.getCondicionalAccess().getInstruccionesElseAssignment_6_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condicional__Group_6_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group_6_0_0__0__Impl
	rule__Condicional__Group_6_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_6_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getPeroSiLaNocheCallaOtraVerdadKeyword_6_0_0_0()); }
	'Pero si la noche calla otra verdad,'
	{ after(grammarAccess.getCondicionalAccess().getPeroSiLaNocheCallaOtraVerdadKeyword_6_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_6_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group_6_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_6_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getQueSurjaEsteSuspiroKeyword_6_0_0_1()); }
	'que surja este suspiro:'
	{ after(grammarAccess.getCondicionalAccess().getQueSurjaEsteSuspiroKeyword_6_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condicional__Group_6_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group_6_0_1__0__Impl
	rule__Condicional__Group_6_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_6_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getPeroSiElVientoTraeOtroMensajeKeyword_6_0_1_0()); }
	'Pero si el viento trae otro mensaje,'
	{ after(grammarAccess.getCondicionalAccess().getPeroSiElVientoTraeOtroMensajeKeyword_6_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_6_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group_6_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_6_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getQueDespierteEstaPasiNKeyword_6_0_1_1()); }
	'que despierte esta pasi\u00F3n:'
	{ after(grammarAccess.getCondicionalAccess().getQueDespierteEstaPasiNKeyword_6_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condicional__Group_6_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group_6_0_2__0__Impl
	rule__Condicional__Group_6_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_6_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getPeroSiElCorazNDudaKeyword_6_0_2_0()); }
	'Pero si el coraz\u00F3n duda,'
	{ after(grammarAccess.getCondicionalAccess().getPeroSiElCorazNDudaKeyword_6_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_6_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group_6_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_6_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getQueRenazcaEstaEsperanzaKeyword_6_0_2_1()); }
	'que renazca esta esperanza:'
	{ after(grammarAccess.getCondicionalAccess().getQueRenazcaEstaEsperanzaKeyword_6_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BucleWhile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleWhile__Group__0__Impl
	rule__BucleWhile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleWhileAccess().getAlternatives_0()); }
	(rule__BucleWhile__Alternatives_0)
	{ after(grammarAccess.getBucleWhileAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleWhile__Group__1__Impl
	rule__BucleWhile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleWhileAccess().getCondicionAssignment_1()); }
	(rule__BucleWhile__CondicionAssignment_1)
	{ after(grammarAccess.getBucleWhileAccess().getCondicionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleWhile__Group__2__Impl
	rule__BucleWhile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleWhileAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getBucleWhileAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleWhile__Group__3__Impl
	rule__BucleWhile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleWhileAccess().getAlternatives_3()); }
	(rule__BucleWhile__Alternatives_3)
	{ after(grammarAccess.getBucleWhileAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleWhile__Group__4__Impl
	rule__BucleWhile__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBucleWhileAccess().getLoopBodyAssignment_4()); }
		(rule__BucleWhile__LoopBodyAssignment_4)
		{ after(grammarAccess.getBucleWhileAccess().getLoopBodyAssignment_4()); }
	)
	(
		{ before(grammarAccess.getBucleWhileAccess().getLoopBodyAssignment_4()); }
		(rule__BucleWhile__LoopBodyAssignment_4)*
		{ after(grammarAccess.getBucleWhileAccess().getLoopBodyAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleWhile__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleWhileAccess().getAlternatives_5()); }
	(rule__BucleWhile__Alternatives_5)
	{ after(grammarAccess.getBucleWhileAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BucleFor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__0__Impl
	rule__BucleFor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getAlternatives_0()); }
	(rule__BucleFor__Alternatives_0)
	{ after(grammarAccess.getBucleForAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__1__Impl
	rule__BucleFor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getVariableAssignment_1()); }
	(rule__BucleFor__VariableAssignment_1)
	{ after(grammarAccess.getBucleForAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__2__Impl
	rule__BucleFor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getDesdeKeyword_2()); }
	'desde'
	{ after(grammarAccess.getBucleForAccess().getDesdeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__3__Impl
	rule__BucleFor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getInicioAssignment_3()); }
	(rule__BucleFor__InicioAssignment_3)
	{ after(grammarAccess.getBucleForAccess().getInicioAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__4__Impl
	rule__BucleFor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getHastaKeyword_4()); }
	'hasta'
	{ after(grammarAccess.getBucleForAccess().getHastaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__5__Impl
	rule__BucleFor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getFinAssignment_5()); }
	(rule__BucleFor__FinAssignment_5)
	{ after(grammarAccess.getBucleForAccess().getFinAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__6__Impl
	rule__BucleFor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getGroup_6()); }
	(rule__BucleFor__Group_6__0)?
	{ after(grammarAccess.getBucleForAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__7__Impl
	rule__BucleFor__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getAlternatives_7()); }
	(rule__BucleFor__Alternatives_7)
	{ after(grammarAccess.getBucleForAccess().getAlternatives_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__8__Impl
	rule__BucleFor__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBucleForAccess().getLoopBodyAssignment_8()); }
		(rule__BucleFor__LoopBodyAssignment_8)
		{ after(grammarAccess.getBucleForAccess().getLoopBodyAssignment_8()); }
	)
	(
		{ before(grammarAccess.getBucleForAccess().getLoopBodyAssignment_8()); }
		(rule__BucleFor__LoopBodyAssignment_8)*
		{ after(grammarAccess.getBucleForAccess().getLoopBodyAssignment_8()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getAlternatives_9()); }
	(rule__BucleFor__Alternatives_9)
	{ after(grammarAccess.getBucleForAccess().getAlternatives_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BucleFor__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group_6__0__Impl
	rule__BucleFor__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getConPasoKeyword_6_0()); }
	'con paso'
	{ after(grammarAccess.getBucleForAccess().getConPasoKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getPasoAssignment_6_1()); }
	(rule__BucleFor__PasoAssignment_6_1)
	{ after(grammarAccess.getBucleForAccess().getPasoAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Funcion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__0__Impl
	rule__Funcion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getAlternatives_0()); }
	(rule__Funcion__Alternatives_0)
	{ after(grammarAccess.getFuncionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__1__Impl
	rule__Funcion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getNameAssignment_1()); }
	(rule__Funcion__NameAssignment_1)
	{ after(grammarAccess.getFuncionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__2__Impl
	rule__Funcion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getGroup_2()); }
	(rule__Funcion__Group_2__0)?
	{ after(grammarAccess.getFuncionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__3__Impl
	rule__Funcion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getAlternatives_3()); }
	(rule__Funcion__Alternatives_3)?
	{ after(grammarAccess.getFuncionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__4__Impl
	rule__Funcion__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getTipoAssignment_4()); }
	(rule__Funcion__TipoAssignment_4)?
	{ after(grammarAccess.getFuncionAccess().getTipoAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__5__Impl
	rule__Funcion__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getAlternatives_5()); }
	(rule__Funcion__Alternatives_5)
	{ after(grammarAccess.getFuncionAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__6__Impl
	rule__Funcion__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFuncionAccess().getInstruccionesAssignment_6()); }
		(rule__Funcion__InstruccionesAssignment_6)
		{ after(grammarAccess.getFuncionAccess().getInstruccionesAssignment_6()); }
	)
	(
		{ before(grammarAccess.getFuncionAccess().getInstruccionesAssignment_6()); }
		(rule__Funcion__InstruccionesAssignment_6)*
		{ after(grammarAccess.getFuncionAccess().getInstruccionesAssignment_6()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getAlternatives_7()); }
	(rule__Funcion__Alternatives_7)
	{ after(grammarAccess.getFuncionAccess().getAlternatives_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Funcion__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_2__0__Impl
	rule__Funcion__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getAlternatives_2_0()); }
	(rule__Funcion__Alternatives_2_0)
	{ after(grammarAccess.getFuncionAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_2__1__Impl
	rule__Funcion__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getParametrosAssignment_2_1()); }
	(rule__Funcion__ParametrosAssignment_2_1)
	{ after(grammarAccess.getFuncionAccess().getParametrosAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getGroup_2_2()); }
	(rule__Funcion__Group_2_2__0)*
	{ after(grammarAccess.getFuncionAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Funcion__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_2_2__0__Impl
	rule__Funcion__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getAlternatives_2_2_0()); }
	(rule__Funcion__Alternatives_2_2_0)
	{ after(grammarAccess.getFuncionAccess().getAlternatives_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getParametrosAssignment_2_2_1()); }
	(rule__Funcion__ParametrosAssignment_2_2_1)
	{ after(grammarAccess.getFuncionAccess().getParametrosAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParametroDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametroDecl__Group__0__Impl
	rule__ParametroDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametroDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametroDeclAccess().getTipoAssignment_0()); }
	(rule__ParametroDecl__TipoAssignment_0)?
	{ after(grammarAccess.getParametroDeclAccess().getTipoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametroDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametroDecl__Group__1__Impl
	rule__ParametroDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametroDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametroDeclAccess().getCommentAssignment_1()); }
	(rule__ParametroDecl__CommentAssignment_1)?
	{ after(grammarAccess.getParametroDeclAccess().getCommentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametroDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametroDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametroDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametroDeclAccess().getNameAssignment_2()); }
	(rule__ParametroDecl__NameAssignment_2)
	{ after(grammarAccess.getParametroDeclAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Return__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Return__Group__0__Impl
	rule__Return__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnAccess().getAlternatives_0()); }
	(rule__Return__Alternatives_0)
	{ after(grammarAccess.getReturnAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Return__Group__1__Impl
	rule__Return__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnAccess().getExpresionAssignment_1()); }
	(rule__Return__ExpresionAssignment_1)
	{ after(grammarAccess.getReturnAccess().getExpresionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Return__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnAccess().getAlternatives_2()); }
	(rule__Return__Alternatives_2)
	{ after(grammarAccess.getReturnAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
	{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
	(rule__OrExpression__Group_1__0)*
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getAlternatives_1_1()); }
	(rule__OrExpression__Alternatives_1_1)
	{ after(grammarAccess.getOrExpressionAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
	(rule__OrExpression__RightAssignment_1_2)
	{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
	ruleEqualityExpression
	{ after(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAlternatives_1_1()); }
	(rule__AndExpression__Alternatives_1_1)
	{ after(grammarAccess.getAndExpressionAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
	(rule__AndExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
	ruleRelationalExpression
	{ after(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
	(rule__EqualityExpression__Group_1__0)*
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__1__Impl
	rule__EqualityExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1()); }
	(rule__EqualityExpression__OpAssignment_1_1)
	{ after(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2()); }
	(rule__EqualityExpression__RightAssignment_1_2)
	{ after(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
	{ after(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
	(rule__RelationalExpression__Group_1__0)*
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__1__Impl
	rule__RelationalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1()); }
	(rule__RelationalExpression__OpAssignment_1_1)
	{ after(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
	(rule__RelationalExpression__RightAssignment_1_2)
	{ after(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
	{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
	(rule__AdditiveExpression__Group_1__0)*
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__1__Impl
	rule__AdditiveExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_1()); }
	(rule__AdditiveExpression__OpAssignment_1_1)
	{ after(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2()); }
	(rule__AdditiveExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
	ruleUnaryExpression
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
	(rule__MultiplicativeExpression__Group_1__0)*
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__1__Impl
	rule__MultiplicativeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_1()); }
	(rule__MultiplicativeExpression__OpAssignment_1_1)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
	(rule__MultiplicativeExpression__RightAssignment_1_2)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_0__0__Impl
	rule__UnaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_0_0()); }
	()
	{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_0__1__Impl
	rule__UnaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0_1()); }
	(rule__UnaryExpression__OpAssignment_0_1)
	{ after(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getExpressionAssignment_0_2()); }
	(rule__UnaryExpression__ExpressionAssignment_0_2)
	{ after(grammarAccess.getUnaryExpressionAccess().getExpressionAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0__0__Impl
	rule__PrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0__1__Impl
	rule__PrimaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
	{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getValueIntAssignment_1_1()); }
	(rule__PrimaryExpression__ValueIntAssignment_1_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getValueIntAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_2__0__Impl
	rule__PrimaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_2_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getValueStringAssignment_2_1()); }
	(rule__PrimaryExpression__ValueStringAssignment_2_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getValueStringAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_3__0__Impl
	rule__PrimaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_3_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getValueBooleanAssignment_3_1()); }
	(rule__PrimaryExpression__ValueBooleanAssignment_3_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getValueBooleanAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__0__Impl
	rule__PrimaryExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getVariableReferenceAction_4_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getVariableReferenceAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getNameAssignment_4_1()); }
	(rule__PrimaryExpression__NameAssignment_4_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getNameAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getFunctionCallAction_0()); }
	()
	{ after(grammarAccess.getFunctionCallAccess().getFunctionCallAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getAlternatives_1()); }
	(rule__FunctionCall__Alternatives_1)
	{ after(grammarAccess.getFunctionCallAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getNameFuncionAssignment_2()); }
	(rule__FunctionCall__NameFuncionAssignment_2)
	{ after(grammarAccess.getFunctionCallAccess().getNameFuncionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getGroup_3()); }
	(rule__FunctionCall__Group_3__0)?
	{ after(grammarAccess.getFunctionCallAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_3__0__Impl
	rule__FunctionCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getAlternatives_3_0()); }
	(rule__FunctionCall__Alternatives_3_0)
	{ after(grammarAccess.getFunctionCallAccess().getAlternatives_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_3__1__Impl
	rule__FunctionCall__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getGroup_3_1()); }
	(rule__FunctionCall__Group_3_1__0)?
	{ after(grammarAccess.getFunctionCallAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getAlternatives_3_2()); }
	(rule__FunctionCall__Alternatives_3_2)
	{ after(grammarAccess.getFunctionCallAccess().getAlternatives_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_3_1__0__Impl
	rule__FunctionCall__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getArgsAssignment_3_1_0()); }
	(rule__FunctionCall__ArgsAssignment_3_1_0)
	{ after(grammarAccess.getFunctionCallAccess().getArgsAssignment_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getAlternatives_3_1_1()); }
	(rule__FunctionCall__Alternatives_3_1_1)*
	{ after(grammarAccess.getFunctionCallAccess().getAlternatives_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_3_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_3_1_1_1__0__Impl
	rule__FunctionCall__Group_3_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getAdicionalmenteKeyword_3_1_1_1_0()); }
	'adicionalmente'
	{ after(grammarAccess.getFunctionCallAccess().getAdicionalmenteKeyword_3_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_3_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getArgsAssignment_3_1_1_1_1()); }
	(rule__FunctionCall__ArgsAssignment_3_1_1_1_1)
	{ after(grammarAccess.getFunctionCallAccess().getArgsAssignment_3_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__CartaAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getCartaCartaParserRuleCall_0()); }
		ruleCarta
		{ after(grammarAccess.getProgramAccess().getCartaCartaParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__SaludoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCartaAccess().getSaludoSaludoParserRuleCall_0_0()); }
		ruleSaludo
		{ after(grammarAccess.getCartaAccess().getSaludoSaludoParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__CuerpoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCartaAccess().getCuerpoCuerpoParserRuleCall_1_0()); }
		ruleCuerpo
		{ after(grammarAccess.getCartaAccess().getCuerpoCuerpoParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__DespedidaAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCartaAccess().getDespedidaDespedidaParserRuleCall_2_0()); }
		ruleDespedida
		{ after(grammarAccess.getCartaAccess().getDespedidaDespedidaParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Saludo__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSaludoAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSaludoAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Despedida__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDespedidaAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDespedidaAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cuerpo__InstruccionesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCuerpoAccess().getInstruccionesInstruccionParserRuleCall_0()); }
		ruleInstruccion
		{ after(grammarAccess.getCuerpoAccess().getInstruccionesInstruccionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__VerboDeclAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclararAccess().getVerboDeclVerboDeclaracionParserRuleCall_0_0()); }
		ruleVerboDeclaracion
		{ after(grammarAccess.getDeclararAccess().getVerboDeclVerboDeclaracionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__ArticuloAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclararAccess().getArticuloArticuloParserRuleCall_1_0()); }
		ruleArticulo
		{ after(grammarAccess.getDeclararAccess().getArticuloArticuloParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__TipoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclararAccess().getTipoTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getDeclararAccess().getTipoTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__SustantivoAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclararAccess().getSustantivoMI_IDParserRuleCall_3_0()); }
		ruleMI_ID
		{ after(grammarAccess.getDeclararAccess().getSustantivoMI_IDParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__PreComentarioAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclararAccess().getPreComentarioCommentParserRuleCall_4_0()); }
		ruleComment
		{ after(grammarAccess.getDeclararAccess().getPreComentarioCommentParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__ValorAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclararAccess().getValorExpressionParserRuleCall_5_0()); }
		ruleExpression
		{ after(grammarAccess.getDeclararAccess().getValorExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__PostComentarioAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclararAccess().getPostComentarioCommentParserRuleCall_6_0()); }
		ruleComment
		{ after(grammarAccess.getDeclararAccess().getPostComentarioCommentParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__VerboReasAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasignarAccess().getVerboReasVerboReasignacionParserRuleCall_0_0()); }
		ruleVerboReasignacion
		{ after(grammarAccess.getReasignarAccess().getVerboReasVerboReasignacionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__PreComentarioAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasignarAccess().getPreComentarioCommentParserRuleCall_1_0()); }
		ruleComment
		{ after(grammarAccess.getReasignarAccess().getPreComentarioCommentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__SustantivoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasignarAccess().getSustantivoMI_IDParserRuleCall_2_0()); }
		ruleMI_ID
		{ after(grammarAccess.getReasignarAccess().getSustantivoMI_IDParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__PostComentarioAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasignarAccess().getPostComentarioCommentParserRuleCall_3_0()); }
		ruleComment
		{ after(grammarAccess.getReasignarAccess().getPostComentarioCommentParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__ValorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasignarAccess().getValorExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getReasignarAccess().getValorExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__ComentarioAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasignarAccess().getComentarioCommentParserRuleCall_5_0()); }
		ruleComment
		{ after(grammarAccess.getReasignarAccess().getComentarioCommentParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrada__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntradaAccess().getVariableMI_IDParserRuleCall_1_0()); }
		ruleMI_ID
		{ after(grammarAccess.getEntradaAccess().getVariableMI_IDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salida__ExpresionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSalidaAccess().getExpresionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSalidaAccess().getExpresionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__CondicionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondicionalAccess().getCondicionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getCondicionalAccess().getCondicionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__CommentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondicionalAccess().getCommentCommentParserRuleCall_3_0()); }
		ruleComment
		{ after(grammarAccess.getCondicionalAccess().getCommentCommentParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__InstruccionesThenAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondicionalAccess().getInstruccionesThenElementoBloqueParserRuleCall_5_0()); }
		ruleElementoBloque
		{ after(grammarAccess.getCondicionalAccess().getInstruccionesThenElementoBloqueParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__InstruccionesElseAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondicionalAccess().getInstruccionesElseElementoBloqueParserRuleCall_6_1_0()); }
		ruleElementoBloque
		{ after(grammarAccess.getCondicionalAccess().getInstruccionesElseElementoBloqueParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__CondicionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleWhileAccess().getCondicionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getBucleWhileAccess().getCondicionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__LoopBodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleWhileAccess().getLoopBodyElementoBloqueParserRuleCall_4_0()); }
		ruleElementoBloque
		{ after(grammarAccess.getBucleWhileAccess().getLoopBodyElementoBloqueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleForAccess().getVariableMI_IDParserRuleCall_1_0()); }
		ruleMI_ID
		{ after(grammarAccess.getBucleForAccess().getVariableMI_IDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__InicioAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleForAccess().getInicioExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getBucleForAccess().getInicioExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__FinAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleForAccess().getFinExpressionParserRuleCall_5_0()); }
		ruleExpression
		{ after(grammarAccess.getBucleForAccess().getFinExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__PasoAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleForAccess().getPasoExpressionParserRuleCall_6_1_0()); }
		ruleExpression
		{ after(grammarAccess.getBucleForAccess().getPasoExpressionParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__LoopBodyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleForAccess().getLoopBodyElementoBloqueParserRuleCall_8_0()); }
		ruleElementoBloque
		{ after(grammarAccess.getBucleForAccess().getLoopBodyElementoBloqueParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getNameMI_IDParserRuleCall_1_0()); }
		ruleMI_ID
		{ after(grammarAccess.getFuncionAccess().getNameMI_IDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__ParametrosAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getParametrosParametroDeclParserRuleCall_2_1_0()); }
		ruleParametroDecl
		{ after(grammarAccess.getFuncionAccess().getParametrosParametroDeclParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__ParametrosAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getParametrosParametroDeclParserRuleCall_2_2_1_0()); }
		ruleParametroDecl
		{ after(grammarAccess.getFuncionAccess().getParametrosParametroDeclParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__TipoAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getTipoTypeParserRuleCall_4_0()); }
		ruleType
		{ after(grammarAccess.getFuncionAccess().getTipoTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__InstruccionesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getInstruccionesElementoBloqueParserRuleCall_6_0()); }
		ruleElementoBloque
		{ after(grammarAccess.getFuncionAccess().getInstruccionesElementoBloqueParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametroDecl__TipoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametroDeclAccess().getTipoTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getParametroDeclAccess().getTipoTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametroDecl__CommentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametroDeclAccess().getCommentCommentParserRuleCall_1_0()); }
		ruleComment
		{ after(grammarAccess.getParametroDeclAccess().getCommentCommentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametroDecl__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametroDeclAccess().getNameMI_IDParserRuleCall_2_0()); }
		ruleMI_ID
		{ after(grammarAccess.getParametroDeclAccess().getNameMI_IDParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__ExpresionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnAccess().getExpresionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getReturnAccess().getExpresionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
		ruleAndExpression
		{ after(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); }
		ruleEqualityExpression
		{ after(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpAlternatives_1_1_0()); }
		(rule__EqualityExpression__OpAlternatives_1_1_0)
		{ after(grammarAccess.getEqualityExpressionAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
		ruleRelationalExpression
		{ after(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOpAlternatives_1_1_0()); }
		(rule__RelationalExpression__OpAlternatives_1_1_0)
		{ after(grammarAccess.getRelationalExpressionAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
		ruleAdditiveExpression
		{ after(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOpAlternatives_1_1_0()); }
		(rule__AdditiveExpression__OpAlternatives_1_1_0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0()); }
		ruleMultiplicativeExpression
		{ after(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAlternatives_1_1_0()); }
		(rule__MultiplicativeExpression__OpAlternatives_1_1_0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightUnaryExpressionParserRuleCall_1_2_0()); }
		ruleUnaryExpression
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightUnaryExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OpAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOpAlternatives_0_1_0()); }
		(rule__UnaryExpression__OpAlternatives_0_1_0)
		{ after(grammarAccess.getUnaryExpressionAccess().getOpAlternatives_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExpressionAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getExpressionUnaryExpressionParserRuleCall_0_2_0()); }
		ruleUnaryExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getExpressionUnaryExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ValueIntAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getValueIntINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getPrimaryExpressionAccess().getValueIntINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ValueStringAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getValueStringSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPrimaryExpressionAccess().getValueStringSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ValueBooleanAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getValueBooleanAlternatives_3_1_0()); }
		(rule__PrimaryExpression__ValueBooleanAlternatives_3_1_0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getValueBooleanAlternatives_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__NameAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getNameIDTerminalRuleCall_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPrimaryExpressionAccess().getNameIDTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__NameFuncionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getNameFuncionMI_IDParserRuleCall_2_0()); }
		ruleMI_ID
		{ after(grammarAccess.getFunctionCallAccess().getNameFuncionMI_IDParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ArgsAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_3_1_0_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ArgsAssignment_3_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_3_1_1_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_3_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getValueANYTEXTTerminalRuleCall_0()); }
		RULE_ANYTEXT
		{ after(grammarAccess.getCommentAccess().getValueANYTEXTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MI_ID__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMI_IDAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getMI_IDAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ANYTEXT : '~' ~(('~'|'\n'|'\r'))* '~';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

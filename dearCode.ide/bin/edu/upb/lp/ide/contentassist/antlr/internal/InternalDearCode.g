/*
 * generated by Xtext 2.39.0
 */
grammar InternalDearCode;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package edu.upb.lp.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.upb.lp.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import edu.upb.lp.services.DearCodeGrammarAccess;

}
@parser::members {
	private DearCodeGrammarAccess grammarAccess;

	public void setGrammarAccess(DearCodeGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getProgramAccess().getCartasAssignment()); }
			(rule__Program__CartasAssignment)
			{ after(grammarAccess.getProgramAccess().getCartasAssignment()); }
		)
		(
			{ before(grammarAccess.getProgramAccess().getCartasAssignment()); }
			(rule__Program__CartasAssignment)*
			{ after(grammarAccess.getProgramAccess().getCartasAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCarta
entryRuleCarta
:
{ before(grammarAccess.getCartaRule()); }
	 ruleCarta
{ after(grammarAccess.getCartaRule()); } 
	 EOF 
;

// Rule Carta
ruleCarta 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCartaAccess().getGroup()); }
		(rule__Carta__Group__0)
		{ after(grammarAccess.getCartaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSaludo
entryRuleSaludo
:
{ before(grammarAccess.getSaludoRule()); }
	 ruleSaludo
{ after(grammarAccess.getSaludoRule()); } 
	 EOF 
;

// Rule Saludo
ruleSaludo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSaludoAccess().getGroup()); }
		(rule__Saludo__Group__0)
		{ after(grammarAccess.getSaludoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDespedida
entryRuleDespedida
:
{ before(grammarAccess.getDespedidaRule()); }
	 ruleDespedida
{ after(grammarAccess.getDespedidaRule()); } 
	 EOF 
;

// Rule Despedida
ruleDespedida 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDespedidaAccess().getGroup()); }
		(rule__Despedida__Group__0)
		{ after(grammarAccess.getDespedidaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCuerpo
entryRuleCuerpo
:
{ before(grammarAccess.getCuerpoRule()); }
	 ruleCuerpo
{ after(grammarAccess.getCuerpoRule()); } 
	 EOF 
;

// Rule Cuerpo
ruleCuerpo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getCuerpoAccess().getInstruccionesAssignment()); }
			(rule__Cuerpo__InstruccionesAssignment)
			{ after(grammarAccess.getCuerpoAccess().getInstruccionesAssignment()); }
		)
		(
			{ before(grammarAccess.getCuerpoAccess().getInstruccionesAssignment()); }
			(rule__Cuerpo__InstruccionesAssignment)*
			{ after(grammarAccess.getCuerpoAccess().getInstruccionesAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruccion
entryRuleInstruccion
:
{ before(grammarAccess.getInstruccionRule()); }
	 ruleInstruccion
{ after(grammarAccess.getInstruccionRule()); } 
	 EOF 
;

// Rule Instruccion
ruleInstruccion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstruccionAccess().getAlternatives()); }
		(rule__Instruccion__Alternatives)
		{ after(grammarAccess.getInstruccionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclarar
entryRuleDeclarar
:
{ before(grammarAccess.getDeclararRule()); }
	 ruleDeclarar
{ after(grammarAccess.getDeclararRule()); } 
	 EOF 
;

// Rule Declarar
ruleDeclarar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclararAccess().getGroup()); }
		(rule__Declarar__Group__0)
		{ after(grammarAccess.getDeclararAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReasignar
entryRuleReasignar
:
{ before(grammarAccess.getReasignarRule()); }
	 ruleReasignar
{ after(grammarAccess.getReasignarRule()); } 
	 EOF 
;

// Rule Reasignar
ruleReasignar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReasignarAccess().getGroup()); }
		(rule__Reasignar__Group__0)
		{ after(grammarAccess.getReasignarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntrada
entryRuleEntrada
:
{ before(grammarAccess.getEntradaRule()); }
	 ruleEntrada
{ after(grammarAccess.getEntradaRule()); } 
	 EOF 
;

// Rule Entrada
ruleEntrada 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntradaAccess().getGroup()); }
		(rule__Entrada__Group__0)
		{ after(grammarAccess.getEntradaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSalida
entryRuleSalida
:
{ before(grammarAccess.getSalidaRule()); }
	 ruleSalida
{ after(grammarAccess.getSalidaRule()); } 
	 EOF 
;

// Rule Salida
ruleSalida 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSalidaAccess().getGroup()); }
		(rule__Salida__Group__0)
		{ after(grammarAccess.getSalidaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValor
entryRuleValor
:
{ before(grammarAccess.getValorRule()); }
	 ruleValor
{ after(grammarAccess.getValorRule()); } 
	 EOF 
;

// Rule Valor
ruleValor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValorAccess().getAlternatives()); }
		(rule__Valor__Alternatives)
		{ after(grammarAccess.getValorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumeroLiteral
entryRuleNumeroLiteral
:
{ before(grammarAccess.getNumeroLiteralRule()); }
	 ruleNumeroLiteral
{ after(grammarAccess.getNumeroLiteralRule()); } 
	 EOF 
;

// Rule NumeroLiteral
ruleNumeroLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumeroLiteralAccess().getAlternatives()); }
		(rule__NumeroLiteral__Alternatives)
		{ after(grammarAccess.getNumeroLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimple
entryRuleSimple
:
{ before(grammarAccess.getSimpleRule()); }
	 ruleSimple
{ after(grammarAccess.getSimpleRule()); } 
	 EOF 
;

// Rule Simple
ruleSimple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleAccess().getValueAssignment()); }
		(rule__Simple__ValueAssignment)
		{ after(grammarAccess.getSimpleAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompuesto
entryRuleCompuesto
:
{ before(grammarAccess.getCompuestoRule()); }
	 ruleCompuesto
{ after(grammarAccess.getCompuestoRule()); } 
	 EOF 
;

// Rule Compuesto
ruleCompuesto 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompuestoAccess().getGroup()); }
		(rule__Compuesto__Group__0)
		{ after(grammarAccess.getCompuestoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicador
entryRuleMultiplicador
:
{ before(grammarAccess.getMultiplicadorRule()); }
	 ruleMultiplicador
{ after(grammarAccess.getMultiplicadorRule()); } 
	 EOF 
;

// Rule Multiplicador
ruleMultiplicador 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicadorAccess().getAlternatives()); }
		(rule__Multiplicador__Alternatives)
		{ after(grammarAccess.getMultiplicadorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArticulo
entryRuleArticulo
:
{ before(grammarAccess.getArticuloRule()); }
	 ruleArticulo
{ after(grammarAccess.getArticuloRule()); } 
	 EOF 
;

// Rule Articulo
ruleArticulo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArticuloAccess().getAlternatives()); }
		(rule__Articulo__Alternatives)
		{ after(grammarAccess.getArticuloAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVerboDeclaracion
entryRuleVerboDeclaracion
:
{ before(grammarAccess.getVerboDeclaracionRule()); }
	 ruleVerboDeclaracion
{ after(grammarAccess.getVerboDeclaracionRule()); } 
	 EOF 
;

// Rule VerboDeclaracion
ruleVerboDeclaracion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVerboDeclaracionAccess().getAlternatives()); }
		(rule__VerboDeclaracion__Alternatives)
		{ after(grammarAccess.getVerboDeclaracionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVerboReasignacion
entryRuleVerboReasignacion
:
{ before(grammarAccess.getVerboReasignacionRule()); }
	 ruleVerboReasignacion
{ after(grammarAccess.getVerboReasignacionRule()); } 
	 EOF 
;

// Rule VerboReasignacion
ruleVerboReasignacion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVerboReasignacionAccess().getAlternatives()); }
		(rule__VerboReasignacion__Alternatives)
		{ after(grammarAccess.getVerboReasignacionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMI_ID
entryRuleMI_ID
:
{ before(grammarAccess.getMI_IDRule()); }
	 ruleMI_ID
{ after(grammarAccess.getMI_IDRule()); } 
	 EOF 
;

// Rule MI_ID
ruleMI_ID 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMI_IDAccess().getNameAssignment()); }
		(rule__MI_ID__NameAssignment)
		{ after(grammarAccess.getMI_IDAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondicion
entryRuleCondicion
:
{ before(grammarAccess.getCondicionRule()); }
	 ruleCondicion
{ after(grammarAccess.getCondicionRule()); } 
	 EOF 
;

// Rule Condicion
ruleCondicion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCondicionAccess().getExpressionParserRuleCall()); }
		ruleExpression
		{ after(grammarAccess.getCondicionAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getOrExprParserRuleCall()); }
		ruleOrExpr
		{ after(grammarAccess.getExpressionAccess().getOrExprParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpr
entryRuleOrExpr
:
{ before(grammarAccess.getOrExprRule()); }
	 ruleOrExpr
{ after(grammarAccess.getOrExprRule()); } 
	 EOF 
;

// Rule OrExpr
ruleOrExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExprAccess().getGroup()); }
		(rule__OrExpr__Group__0)
		{ after(grammarAccess.getOrExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpr
entryRuleAndExpr
:
{ before(grammarAccess.getAndExprRule()); }
	 ruleAndExpr
{ after(grammarAccess.getAndExprRule()); } 
	 EOF 
;

// Rule AndExpr
ruleAndExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExprAccess().getGroup()); }
		(rule__AndExpr__Group__0)
		{ after(grammarAccess.getAndExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExpr
entryRuleEqualityExpr
:
{ before(grammarAccess.getEqualityExprRule()); }
	 ruleEqualityExpr
{ after(grammarAccess.getEqualityExprRule()); } 
	 EOF 
;

// Rule EqualityExpr
ruleEqualityExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExprAccess().getGroup()); }
		(rule__EqualityExpr__Group__0)
		{ after(grammarAccess.getEqualityExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalExpr
entryRuleRelationalExpr
:
{ before(grammarAccess.getRelationalExprRule()); }
	 ruleRelationalExpr
{ after(grammarAccess.getRelationalExprRule()); } 
	 EOF 
;

// Rule RelationalExpr
ruleRelationalExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExprAccess().getGroup()); }
		(rule__RelationalExpr__Group__0)
		{ after(grammarAccess.getRelationalExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalOp
entryRuleRelationalOp
:
{ before(grammarAccess.getRelationalOpRule()); }
	 ruleRelationalOp
{ after(grammarAccess.getRelationalOpRule()); } 
	 EOF 
;

// Rule RelationalOp
ruleRelationalOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalOpAccess().getAlternatives()); }
		(rule__RelationalOp__Alternatives)
		{ after(grammarAccess.getRelationalOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpr
entryRuleAdditiveExpr
:
{ before(grammarAccess.getAdditiveExprRule()); }
	 ruleAdditiveExpr
{ after(grammarAccess.getAdditiveExprRule()); } 
	 EOF 
;

// Rule AdditiveExpr
ruleAdditiveExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExprAccess().getGroup()); }
		(rule__AdditiveExpr__Group__0)
		{ after(grammarAccess.getAdditiveExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpr
entryRuleMultiplicativeExpr
:
{ before(grammarAccess.getMultiplicativeExprRule()); }
	 ruleMultiplicativeExpr
{ after(grammarAccess.getMultiplicativeExprRule()); } 
	 EOF 
;

// Rule MultiplicativeExpr
ruleMultiplicativeExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExprAccess().getGroup()); }
		(rule__MultiplicativeExpr__Group__0)
		{ after(grammarAccess.getMultiplicativeExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr
:
{ before(grammarAccess.getUnaryExprRule()); }
	 ruleUnaryExpr
{ after(grammarAccess.getUnaryExprRule()); } 
	 EOF 
;

// Rule UnaryExpr
ruleUnaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExprAccess().getAlternatives()); }
		(rule__UnaryExpr__Alternatives)
		{ after(grammarAccess.getUnaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
		(rule__FunctionCall__Group__0)
		{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpr
entryRulePrimaryExpr
:
{ before(grammarAccess.getPrimaryExprRule()); }
	 rulePrimaryExpr
{ after(grammarAccess.getPrimaryExprRule()); } 
	 EOF 
;

// Rule PrimaryExpr
rulePrimaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getAlternatives()); }
		(rule__PrimaryExpr__Alternatives)
		{ after(grammarAccess.getPrimaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntLiteral
entryRuleIntLiteral
:
{ before(grammarAccess.getIntLiteralRule()); }
	 ruleIntLiteral
{ after(grammarAccess.getIntLiteralRule()); } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntLiteralAccess().getGroup()); }
		(rule__IntLiteral__Group__0)
		{ after(grammarAccess.getIntLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getGroup()); }
		(rule__StringLiteral__Group__0)
		{ after(grammarAccess.getStringLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getGroup()); }
		(rule__BooleanLiteral__Group__0)
		{ after(grammarAccess.getBooleanLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableRef
entryRuleVariableRef
:
{ before(grammarAccess.getVariableRefRule()); }
	 ruleVariableRef
{ after(grammarAccess.getVariableRefRule()); } 
	 EOF 
;

// Rule VariableRef
ruleVariableRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableRefAccess().getNameAssignment()); }
		(rule__VariableRef__NameAssignment)
		{ after(grammarAccess.getVariableRefAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpecialBoolean
entryRuleSpecialBoolean
:
{ before(grammarAccess.getSpecialBooleanRule()); }
	 ruleSpecialBoolean
{ after(grammarAccess.getSpecialBooleanRule()); } 
	 EOF 
;

// Rule SpecialBoolean
ruleSpecialBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecialBooleanAccess().getAlternatives()); }
		(rule__SpecialBoolean__Alternatives)
		{ after(grammarAccess.getSpecialBooleanAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondicional
entryRuleCondicional
:
{ before(grammarAccess.getCondicionalRule()); }
	 ruleCondicional
{ after(grammarAccess.getCondicionalRule()); } 
	 EOF 
;

// Rule Condicional
ruleCondicional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCondicionalAccess().getGroup()); }
		(rule__Condicional__Group__0)
		{ after(grammarAccess.getCondicionalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBucleWhile
entryRuleBucleWhile
:
{ before(grammarAccess.getBucleWhileRule()); }
	 ruleBucleWhile
{ after(grammarAccess.getBucleWhileRule()); } 
	 EOF 
;

// Rule BucleWhile
ruleBucleWhile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBucleWhileAccess().getGroup()); }
		(rule__BucleWhile__Group__0)
		{ after(grammarAccess.getBucleWhileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBucleFor
entryRuleBucleFor
:
{ before(grammarAccess.getBucleForRule()); }
	 ruleBucleFor
{ after(grammarAccess.getBucleForRule()); } 
	 EOF 
;

// Rule BucleFor
ruleBucleFor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBucleForAccess().getGroup()); }
		(rule__BucleFor__Group__0)
		{ after(grammarAccess.getBucleForAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFuncion
entryRuleFuncion
:
{ before(grammarAccess.getFuncionRule()); }
	 ruleFuncion
{ after(grammarAccess.getFuncionRule()); } 
	 EOF 
;

// Rule Funcion
ruleFuncion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuncionAccess().getGroup()); }
		(rule__Funcion__Group__0)
		{ after(grammarAccess.getFuncionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Saludo__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSaludoAccess().getQueridoKeyword_0_0()); }
		'Querido'
		{ after(grammarAccess.getSaludoAccess().getQueridoKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSaludoAccess().getQueridaKeyword_0_1()); }
		'Querida'
		{ after(grammarAccess.getSaludoAccess().getQueridaKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruccion__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstruccionAccess().getDeclararParserRuleCall_0()); }
		ruleDeclarar
		{ after(grammarAccess.getInstruccionAccess().getDeclararParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getReasignarParserRuleCall_1()); }
		ruleReasignar
		{ after(grammarAccess.getInstruccionAccess().getReasignarParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getCondicionalParserRuleCall_2()); }
		ruleCondicional
		{ after(grammarAccess.getInstruccionAccess().getCondicionalParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getBucleWhileParserRuleCall_3()); }
		ruleBucleWhile
		{ after(grammarAccess.getInstruccionAccess().getBucleWhileParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getBucleForParserRuleCall_4()); }
		ruleBucleFor
		{ after(grammarAccess.getInstruccionAccess().getBucleForParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getEntradaParserRuleCall_5()); }
		ruleEntrada
		{ after(grammarAccess.getInstruccionAccess().getEntradaParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getSalidaParserRuleCall_6()); }
		ruleSalida
		{ after(grammarAccess.getInstruccionAccess().getSalidaParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getFuncionParserRuleCall_7()); }
		ruleFuncion
		{ after(grammarAccess.getInstruccionAccess().getFuncionParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__ComentarioAlternatives_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclararAccess().getComentarioANYTEXTTerminalRuleCall_5_0_0()); }
		RULE_ANYTEXT
		{ after(grammarAccess.getDeclararAccess().getComentarioANYTEXTTerminalRuleCall_5_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclararAccess().getComentarioSTRINGTerminalRuleCall_5_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getDeclararAccess().getComentarioSTRINGTerminalRuleCall_5_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__ComentarioAlternatives_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasignarAccess().getComentarioANYTEXTTerminalRuleCall_5_0_0()); }
		RULE_ANYTEXT
		{ after(grammarAccess.getReasignarAccess().getComentarioANYTEXTTerminalRuleCall_5_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getReasignarAccess().getComentarioSTRINGTerminalRuleCall_5_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getReasignarAccess().getComentarioSTRINGTerminalRuleCall_5_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Valor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValorAccess().getNumeroLiteralParserRuleCall_0()); }
		ruleNumeroLiteral
		{ after(grammarAccess.getValorAccess().getNumeroLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValorAccess().getExpressionParserRuleCall_1()); }
		ruleExpression
		{ after(grammarAccess.getValorAccess().getExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumeroLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumeroLiteralAccess().getSimpleParserRuleCall_0()); }
		ruleSimple
		{ after(grammarAccess.getNumeroLiteralAccess().getSimpleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumeroLiteralAccess().getCompuestoParserRuleCall_1()); }
		ruleCompuesto
		{ after(grammarAccess.getNumeroLiteralAccess().getCompuestoParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple__ValueAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleAccess().getValueCeroKeyword_0_0()); }
		'cero'
		{ after(grammarAccess.getSimpleAccess().getValueCeroKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleAccess().getValueUnoKeyword_0_1()); }
		'uno'
		{ after(grammarAccess.getSimpleAccess().getValueUnoKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleAccess().getValueDosKeyword_0_2()); }
		'dos'
		{ after(grammarAccess.getSimpleAccess().getValueDosKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleAccess().getValueTresKeyword_0_3()); }
		'tres'
		{ after(grammarAccess.getSimpleAccess().getValueTresKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleAccess().getValueCuatroKeyword_0_4()); }
		'cuatro'
		{ after(grammarAccess.getSimpleAccess().getValueCuatroKeyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleAccess().getValueCincoKeyword_0_5()); }
		'cinco'
		{ after(grammarAccess.getSimpleAccess().getValueCincoKeyword_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleAccess().getValueSeisKeyword_0_6()); }
		'seis'
		{ after(grammarAccess.getSimpleAccess().getValueSeisKeyword_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleAccess().getValueSieteKeyword_0_7()); }
		'siete'
		{ after(grammarAccess.getSimpleAccess().getValueSieteKeyword_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleAccess().getValueOchoKeyword_0_8()); }
		'ocho'
		{ after(grammarAccess.getSimpleAccess().getValueOchoKeyword_0_8()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleAccess().getValueNueveKeyword_0_9()); }
		'nueve'
		{ after(grammarAccess.getSimpleAccess().getValueNueveKeyword_0_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicador__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicadorAccess().getGroup_0()); }
		(rule__Multiplicador__Group_0__0)
		{ after(grammarAccess.getMultiplicadorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicadorAccess().getGroup_1()); }
		(rule__Multiplicador__Group_1__0)
		{ after(grammarAccess.getMultiplicadorAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicadorAccess().getGroup_2()); }
		(rule__Multiplicador__Group_2__0)
		{ after(grammarAccess.getMultiplicadorAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Articulo__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArticuloAccess().getUnKeyword_0()); }
		'un'
		{ after(grammarAccess.getArticuloAccess().getUnKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getArticuloAccess().getUnaKeyword_1()); }
		'una'
		{ after(grammarAccess.getArticuloAccess().getUnaKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerboDeclaracion__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerboDeclaracionAccess().getTeRegaloKeyword_0()); }
		'Te regalo'
		{ after(grammarAccess.getVerboDeclaracionAccess().getTeRegaloKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getVerboDeclaracionAccess().getOfrezcoKeyword_1()); }
		'Ofrezco'
		{ after(grammarAccess.getVerboDeclaracionAccess().getOfrezcoKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getVerboDeclaracionAccess().getObsequioKeyword_2()); }
		'Obsequio'
		{ after(grammarAccess.getVerboDeclaracionAccess().getObsequioKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getVerboDeclaracionAccess().getDepositoEnTuJardNKeyword_3()); }
		'Deposito en tu jard\u00EDn'
		{ after(grammarAccess.getVerboDeclaracionAccess().getDepositoEnTuJardNKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerboReasignacion__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerboReasignacionAccess().getPermTemeAlimentarKeyword_0()); }
		'Perm\u00EDteme alimentar'
		{ after(grammarAccess.getVerboReasignacionAccess().getPermTemeAlimentarKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getVerboReasignacionAccess().getPermTemeRegarKeyword_1()); }
		'Perm\u00EDteme regar'
		{ after(grammarAccess.getVerboReasignacionAccess().getPermTemeRegarKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getVerboReasignacionAccess().getPermTemeAjustarKeyword_2()); }
		'Perm\u00EDteme ajustar'
		{ after(grammarAccess.getVerboReasignacionAccess().getPermTemeAjustarKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExprAccess().getLateAlUnSonoConKeyword_1_1_0()); }
		'late al un\u00EDsono con'
		{ after(grammarAccess.getEqualityExprAccess().getLateAlUnSonoConKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExprAccess().getCantaConUnMatizDistintoAKeyword_1_1_1()); }
		'canta con un matiz distinto a'
		{ after(grammarAccess.getEqualityExprAccess().getCantaConUnMatizDistintoAKeyword_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalOpAccess().getSusurraConMenosFuerzaQueKeyword_0()); }
		'susurra con menos fuerza que'
		{ after(grammarAccess.getRelationalOpAccess().getSusurraConMenosFuerzaQueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOpAccess().getCasiSuspiraAlMismoNivelQueKeyword_1()); }
		'casi suspira al mismo nivel que'
		{ after(grammarAccess.getRelationalOpAccess().getCasiSuspiraAlMismoNivelQueKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOpAccess().getArdeConMSPasiNQueKeyword_2()); }
		'arde con m\u00E1s pasi\u00F3n que'
		{ after(grammarAccess.getRelationalOpAccess().getArdeConMSPasiNQueKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOpAccess().getRodeaConTantaFuerzaComoKeyword_3()); }
		'rodea con tanta fuerza como'
		{ after(grammarAccess.getRelationalOpAccess().getRodeaConTantaFuerzaComoKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExprAccess().getUnidosEnUnSoloSuspiroConKeyword_1_1_0()); }
		'unidos en un solo suspiro con'
		{ after(grammarAccess.getAdditiveExprAccess().getUnidosEnUnSoloSuspiroConKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExprAccess().getFundidosEnLaLlamaDeKeyword_1_1_1()); }
		'fundidos en la llama de'
		{ after(grammarAccess.getAdditiveExprAccess().getFundidosEnLaLlamaDeKeyword_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExprAccess().getFortalecidosPorElFuegoDeKeyword_1_1_0()); }
		'fortalecidos por el fuego de'
		{ after(grammarAccess.getMultiplicativeExprAccess().getFortalecidosPorElFuegoDeKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeExprAccess().getSeparadosEntreLosEcosDeKeyword_1_1_1()); }
		'separados entre los ecos de'
		{ after(grammarAccess.getMultiplicativeExprAccess().getSeparadosEntreLosEcosDeKeyword_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeExprAccess().getResuenaConElEcoDeKeyword_1_1_2()); }
		'resuena con el eco de'
		{ after(grammarAccess.getMultiplicativeExprAccess().getResuenaConElEcoDeKeyword_1_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getGroup_0()); }
		(rule__UnaryExpr__Group_0__0)
		{ after(grammarAccess.getUnaryExprAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getPrimaryExprParserRuleCall_1()); }
		rulePrimaryExpr
		{ after(grammarAccess.getUnaryExprAccess().getPrimaryExprParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getLiteralParserRuleCall_0()); }
		ruleLiteral
		{ after(grammarAccess.getPrimaryExprAccess().getLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getVariableRefParserRuleCall_1()); }
		ruleVariableRef
		{ after(grammarAccess.getPrimaryExprAccess().getVariableRefParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getSpecialBooleanParserRuleCall_2()); }
		ruleSpecialBoolean
		{ after(grammarAccess.getPrimaryExprAccess().getSpecialBooleanParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getFunctionCallParserRuleCall_3()); }
		ruleFunctionCall
		{ after(grammarAccess.getPrimaryExprAccess().getFunctionCallParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_4()); }
		(rule__PrimaryExpr__Group_4__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_0()); }
		ruleIntLiteral
		{ after(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_1()); }
		ruleStringLiteral
		{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_2()); }
		ruleBooleanLiteral
		{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getValueSiempreKeyword_1_0_0()); }
		'siempre'
		{ after(grammarAccess.getBooleanLiteralAccess().getValueSiempreKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getValueJamSKeyword_1_0_1()); }
		'jam\u00E1s'
		{ after(grammarAccess.getBooleanLiteralAccess().getValueJamSKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialBoolean__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialBooleanAccess().getANMePiensasKeyword_0()); }
		'a\u00FAn me piensas'
		{ after(grammarAccess.getSpecialBooleanAccess().getANMePiensasKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getSpecialBooleanAccess().getTuVozMeAlcanzaKeyword_1()); }
		'tu voz me alcanza'
		{ after(grammarAccess.getSpecialBooleanAccess().getTuVozMeAlcanzaKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleWhileAccess().getMientrasAunMePiensesKeyword_0_0()); }
		'Mientras aun me pienses'
		{ after(grammarAccess.getBucleWhileAccess().getMientrasAunMePiensesKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBucleWhileAccess().getMientrasANSueEsConEsteMomentoHazQueOcurraKeyword_0_1()); }
		'Mientras a\u00FAn sue\u00F1es con este momento, haz que ocurra'
		{ after(grammarAccess.getBucleWhileAccess().getMientrasANSueEsConEsteMomentoHazQueOcurraKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleForAccess().getCadaDiaDesdeKeyword_0_0()); }
		'Cada dia, desde'
		{ after(grammarAccess.getBucleForAccess().getCadaDiaDesdeKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBucleForAccess().getPorCadaSuspiroDesdeKeyword_0_1()); }
		'Por cada suspiro desde'
		{ after(grammarAccess.getBucleForAccess().getPorCadaSuspiroDesdeKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getDejoEnEstasLNeasUnaPromesaLlamadaKeyword_0_0_0()); }
		'Dejo en estas l\u00EDneas una promesa llamada'
		{ after(grammarAccess.getFuncionAccess().getDejoEnEstasLNeasUnaPromesaLlamadaKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getEscriboEnEstasLNeasUnaIntenciNLlamadaKeyword_0_0_1()); }
		'Escribo en estas l\u00EDneas una intenci\u00F3n llamada'
		{ after(grammarAccess.getFuncionAccess().getEscriboEnEstasLNeasUnaIntenciNLlamadaKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getFuncionAccess().getEnLaBrisaEscondoUnDeseoLlamadoKeyword_0_0_2()); }
		'En la brisa escondo un deseo llamado'
		{ after(grammarAccess.getFuncionAccess().getEnLaBrisaEscondoUnDeseoLlamadoKeyword_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Carta__Group__0__Impl
	rule__Carta__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCartaAccess().getSaludoAssignment_0()); }
	(rule__Carta__SaludoAssignment_0)
	{ after(grammarAccess.getCartaAccess().getSaludoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Carta__Group__1__Impl
	rule__Carta__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCartaAccess().getCuerpoAssignment_1()); }
	(rule__Carta__CuerpoAssignment_1)
	{ after(grammarAccess.getCartaAccess().getCuerpoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Carta__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCartaAccess().getDespedidaAssignment_2()); }
	(rule__Carta__DespedidaAssignment_2)
	{ after(grammarAccess.getCartaAccess().getDespedidaAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Saludo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Saludo__Group__0__Impl
	rule__Saludo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Saludo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaludoAccess().getAlternatives_0()); }
	(rule__Saludo__Alternatives_0)
	{ after(grammarAccess.getSaludoAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Saludo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Saludo__Group__1__Impl
	rule__Saludo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Saludo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaludoAccess().getNameAssignment_1()); }
	(rule__Saludo__NameAssignment_1)
	{ after(grammarAccess.getSaludoAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Saludo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Saludo__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Saludo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaludoAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getSaludoAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Despedida__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Despedida__Group__0__Impl
	rule__Despedida__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Despedida__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDespedidaAccess().getConCariOTuProgramadorKeyword_0()); }
	'Con cari\u00F1o, Tu programador'
	{ after(grammarAccess.getDespedidaAccess().getConCariOTuProgramadorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Despedida__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Despedida__Group__1__Impl
	rule__Despedida__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Despedida__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDespedidaAccess().getNameAssignment_1()); }
	(rule__Despedida__NameAssignment_1)
	{ after(grammarAccess.getDespedidaAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Despedida__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Despedida__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Despedida__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDespedidaAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getDespedidaAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declarar__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarar__Group__0__Impl
	rule__Declarar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclararAccess().getVerboDeclAssignment_0()); }
	(rule__Declarar__VerboDeclAssignment_0)
	{ after(grammarAccess.getDeclararAccess().getVerboDeclAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarar__Group__1__Impl
	rule__Declarar__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclararAccess().getArticuloAssignment_1()); }
	(rule__Declarar__ArticuloAssignment_1)
	{ after(grammarAccess.getDeclararAccess().getArticuloAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarar__Group__2__Impl
	rule__Declarar__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclararAccess().getSustantivoAssignment_2()); }
	(rule__Declarar__SustantivoAssignment_2)
	{ after(grammarAccess.getDeclararAccess().getSustantivoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarar__Group__3__Impl
	rule__Declarar__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclararAccess().getConectorAssignment_3()); }
	(rule__Declarar__ConectorAssignment_3)
	{ after(grammarAccess.getDeclararAccess().getConectorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarar__Group__4__Impl
	rule__Declarar__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclararAccess().getValorAssignment_4()); }
	(rule__Declarar__ValorAssignment_4)
	{ after(grammarAccess.getDeclararAccess().getValorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarar__Group__5__Impl
	rule__Declarar__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclararAccess().getComentarioAssignment_5()); }
	(rule__Declarar__ComentarioAssignment_5)?
	{ after(grammarAccess.getDeclararAccess().getComentarioAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarar__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclararAccess().getFullStopKeyword_6()); }
	'.'
	{ after(grammarAccess.getDeclararAccess().getFullStopKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reasignar__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasignar__Group__0__Impl
	rule__Reasignar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasignarAccess().getVerboReasAssignment_0()); }
	(rule__Reasignar__VerboReasAssignment_0)
	{ after(grammarAccess.getReasignarAccess().getVerboReasAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasignar__Group__1__Impl
	rule__Reasignar__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasignarAccess().getConectorAssignment_1()); }
	(rule__Reasignar__ConectorAssignment_1)
	{ after(grammarAccess.getReasignarAccess().getConectorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasignar__Group__2__Impl
	rule__Reasignar__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasignarAccess().getSustantivoAssignment_2()); }
	(rule__Reasignar__SustantivoAssignment_2)
	{ after(grammarAccess.getReasignarAccess().getSustantivoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasignar__Group__3__Impl
	rule__Reasignar__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasignarAccess().getConKeyword_3()); }
	'con'
	{ after(grammarAccess.getReasignarAccess().getConKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasignar__Group__4__Impl
	rule__Reasignar__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasignarAccess().getValorAssignment_4()); }
	(rule__Reasignar__ValorAssignment_4)
	{ after(grammarAccess.getReasignarAccess().getValorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasignar__Group__5__Impl
	rule__Reasignar__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasignarAccess().getComentarioAssignment_5()); }
	(rule__Reasignar__ComentarioAssignment_5)?
	{ after(grammarAccess.getReasignarAccess().getComentarioAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasignar__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasignarAccess().getFullStopKeyword_6()); }
	'.'
	{ after(grammarAccess.getReasignarAccess().getFullStopKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entrada__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entrada__Group__0__Impl
	rule__Entrada__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrada__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntradaAccess().getLePedAlLectorQueMeDijeraKeyword_0()); }
	'Le ped\u00ED al lector que me dijera'
	{ after(grammarAccess.getEntradaAccess().getLePedAlLectorQueMeDijeraKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrada__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entrada__Group__1__Impl
	rule__Entrada__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrada__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntradaAccess().getVariableAssignment_1()); }
	(rule__Entrada__VariableAssignment_1)
	{ after(grammarAccess.getEntradaAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrada__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entrada__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrada__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntradaAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getEntradaAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Salida__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Salida__Group__0__Impl
	rule__Salida__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Salida__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSalidaAccess().getHoyLeQuiseContarAlMundoSobreKeyword_0()); }
	'Hoy le quise contar al mundo sobre:'
	{ after(grammarAccess.getSalidaAccess().getHoyLeQuiseContarAlMundoSobreKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salida__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Salida__Group__1__Impl
	rule__Salida__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Salida__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSalidaAccess().getExpresionAssignment_1()); }
	(rule__Salida__ExpresionAssignment_1)
	{ after(grammarAccess.getSalidaAccess().getExpresionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salida__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Salida__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Salida__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSalidaAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getSalidaAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compuesto__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compuesto__Group__0__Impl
	rule__Compuesto__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compuesto__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompuestoAccess().getCantidadAssignment_0()); }
	(rule__Compuesto__CantidadAssignment_0)
	{ after(grammarAccess.getCompuestoAccess().getCantidadAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compuesto__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compuesto__Group__1__Impl
	rule__Compuesto__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compuesto__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompuestoAccess().getMultiplicadorAssignment_1()); }
	(rule__Compuesto__MultiplicadorAssignment_1)
	{ after(grammarAccess.getCompuestoAccess().getMultiplicadorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compuesto__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compuesto__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compuesto__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompuestoAccess().getGroup_2()); }
	(rule__Compuesto__Group_2__0)?
	{ after(grammarAccess.getCompuestoAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compuesto__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compuesto__Group_2__0__Impl
	rule__Compuesto__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compuesto__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompuestoAccess().getYKeyword_2_0()); }
	'y'
	{ after(grammarAccess.getCompuestoAccess().getYKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compuesto__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compuesto__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compuesto__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompuestoAccess().getRestoAssignment_2_1()); }
	(rule__Compuesto__RestoAssignment_2_1)
	{ after(grammarAccess.getCompuestoAccess().getRestoAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicador__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicador__Group_0__0__Impl
	rule__Multiplicador__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicador__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicadorAccess().getDecenaKeyword_0_0()); }
	'decena'
	{ after(grammarAccess.getMultiplicadorAccess().getDecenaKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicador__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicador__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicador__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicadorAccess().getSKeyword_0_1()); }
	('s')?
	{ after(grammarAccess.getMultiplicadorAccess().getSKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicador__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicador__Group_1__0__Impl
	rule__Multiplicador__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicador__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicadorAccess().getCentenaKeyword_1_0()); }
	'centena'
	{ after(grammarAccess.getMultiplicadorAccess().getCentenaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicador__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicador__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicador__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicadorAccess().getSKeyword_1_1()); }
	('s')?
	{ after(grammarAccess.getMultiplicadorAccess().getSKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicador__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicador__Group_2__0__Impl
	rule__Multiplicador__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicador__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicadorAccess().getMillarKeyword_2_0()); }
	'millar'
	{ after(grammarAccess.getMultiplicadorAccess().getMillarKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicador__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicador__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicador__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicadorAccess().getEsKeyword_2_1()); }
	('es')?
	{ after(grammarAccess.getMultiplicadorAccess().getEsKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group__0__Impl
	rule__OrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0()); }
	ruleAndExpr
	{ after(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getGroup_1()); }
	(rule__OrExpr__Group_1__0)*
	{ after(grammarAccess.getOrExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group_1__0__Impl
	rule__OrExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getOrExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrExprAccess().getOrExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group_1__1__Impl
	rule__OrExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getOQuizSKeyword_1_1()); }
	'o quiz\u00E1s'
	{ after(grammarAccess.getOrExprAccess().getOQuizSKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getRightAssignment_1_2()); }
	(rule__OrExpr__RightAssignment_1_2)
	{ after(grammarAccess.getOrExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpr__Group__0__Impl
	rule__AndExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExprAccess().getEqualityExprParserRuleCall_0()); }
	ruleEqualityExpr
	{ after(grammarAccess.getAndExprAccess().getEqualityExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExprAccess().getGroup_1()); }
	(rule__AndExpr__Group_1__0)*
	{ after(grammarAccess.getAndExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpr__Group_1__0__Impl
	rule__AndExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExprAccess().getAndExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndExprAccess().getAndExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpr__Group_1__1__Impl
	rule__AndExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExprAccess().getYTambiNKeyword_1_1()); }
	'y tambi\u00E9n'
	{ after(grammarAccess.getAndExprAccess().getYTambiNKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExprAccess().getRightAssignment_1_2()); }
	(rule__AndExpr__RightAssignment_1_2)
	{ after(grammarAccess.getAndExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpr__Group__0__Impl
	rule__EqualityExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExprAccess().getRelationalExprParserRuleCall_0()); }
	ruleRelationalExpr
	{ after(grammarAccess.getEqualityExprAccess().getRelationalExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExprAccess().getGroup_1()); }
	(rule__EqualityExpr__Group_1__0)*
	{ after(grammarAccess.getEqualityExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpr__Group_1__0__Impl
	rule__EqualityExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExprAccess().getEqualityExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityExprAccess().getEqualityExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpr__Group_1__1__Impl
	rule__EqualityExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExprAccess().getAlternatives_1_1()); }
	(rule__EqualityExpr__Alternatives_1_1)
	{ after(grammarAccess.getEqualityExprAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExprAccess().getRightAssignment_1_2()); }
	(rule__EqualityExpr__RightAssignment_1_2)
	{ after(grammarAccess.getEqualityExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpr__Group__0__Impl
	rule__RelationalExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExprAccess().getAdditiveExprParserRuleCall_0()); }
	ruleAdditiveExpr
	{ after(grammarAccess.getRelationalExprAccess().getAdditiveExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExprAccess().getGroup_1()); }
	(rule__RelationalExpr__Group_1__0)?
	{ after(grammarAccess.getRelationalExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpr__Group_1__0__Impl
	rule__RelationalExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExprAccess().getBinaryRelationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getRelationalExprAccess().getBinaryRelationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpr__Group_1__1__Impl
	rule__RelationalExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExprAccess().getOpAssignment_1_1()); }
	(rule__RelationalExpr__OpAssignment_1_1)
	{ after(grammarAccess.getRelationalExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExprAccess().getRightAssignment_1_2()); }
	(rule__RelationalExpr__RightAssignment_1_2)
	{ after(grammarAccess.getRelationalExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpr__Group__0__Impl
	rule__AdditiveExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExprAccess().getMultiplicativeExprParserRuleCall_0()); }
	ruleMultiplicativeExpr
	{ after(grammarAccess.getAdditiveExprAccess().getMultiplicativeExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExprAccess().getGroup_1()); }
	(rule__AdditiveExpr__Group_1__0)*
	{ after(grammarAccess.getAdditiveExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpr__Group_1__0__Impl
	rule__AdditiveExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExprAccess().getAdditiveExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAdditiveExprAccess().getAdditiveExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpr__Group_1__1__Impl
	rule__AdditiveExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExprAccess().getAlternatives_1_1()); }
	(rule__AdditiveExpr__Alternatives_1_1)
	{ after(grammarAccess.getAdditiveExprAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExprAccess().getRightAssignment_1_2()); }
	(rule__AdditiveExpr__RightAssignment_1_2)
	{ after(grammarAccess.getAdditiveExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpr__Group__0__Impl
	rule__MultiplicativeExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExprAccess().getUnaryExprParserRuleCall_0()); }
	ruleUnaryExpr
	{ after(grammarAccess.getMultiplicativeExprAccess().getUnaryExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExprAccess().getGroup_1()); }
	(rule__MultiplicativeExpr__Group_1__0)*
	{ after(grammarAccess.getMultiplicativeExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpr__Group_1__0__Impl
	rule__MultiplicativeExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExprAccess().getMultiplicativeExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMultiplicativeExprAccess().getMultiplicativeExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpr__Group_1__1__Impl
	rule__MultiplicativeExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExprAccess().getAlternatives_1_1()); }
	(rule__MultiplicativeExpr__Alternatives_1_1)
	{ after(grammarAccess.getMultiplicativeExprAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExprAccess().getRightAssignment_1_2()); }
	(rule__MultiplicativeExpr__RightAssignment_1_2)
	{ after(grammarAccess.getMultiplicativeExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0__0__Impl
	rule__UnaryExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getNotExprAction_0_0()); }
	()
	{ after(grammarAccess.getUnaryExprAccess().getNotExprAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0__1__Impl
	rule__UnaryExpr__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getNoCreoQueKeyword_0_1()); }
	'no creo que'
	{ after(grammarAccess.getUnaryExprAccess().getNoCreoQueKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getExprAssignment_0_2()); }
	(rule__UnaryExpr__ExprAssignment_0_2)
	{ after(grammarAccess.getUnaryExprAccess().getExprAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getNameAssignment_0()); }
	(rule__FunctionCall__NameAssignment_0)
	{ after(grammarAccess.getFunctionCallAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getGroup_2()); }
	(rule__FunctionCall__Group_2__0)?
	{ after(grammarAccess.getFunctionCallAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2__0__Impl
	rule__FunctionCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getArgsAssignment_2_0()); }
	(rule__FunctionCall__ArgsAssignment_2_0)
	{ after(grammarAccess.getFunctionCallAccess().getArgsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getGroup_2_1()); }
	(rule__FunctionCall__Group_2_1__0)*
	{ after(grammarAccess.getFunctionCallAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2_1__0__Impl
	rule__FunctionCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getArgsAssignment_2_1_1()); }
	(rule__FunctionCall__ArgsAssignment_2_1_1)
	{ after(grammarAccess.getFunctionCallAccess().getArgsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_4__0__Impl
	rule__PrimaryExpr__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getPrimaryExprAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_4__1__Impl
	rule__PrimaryExpr__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getExpressionParserRuleCall_4_1()); }
	ruleExpression
	{ after(grammarAccess.getPrimaryExprAccess().getExpressionParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_4_2()); }
	')'
	{ after(grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntLiteral__Group__0__Impl
	rule__IntLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntLiteralAccess().getIntLiteralAction_0()); }
	()
	{ after(grammarAccess.getIntLiteralAccess().getIntLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntLiteralAccess().getValueAssignment_1()); }
	(rule__IntLiteral__ValueAssignment_1)
	{ after(grammarAccess.getIntLiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringLiteral__Group__0__Impl
	rule__StringLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
	()
	{ after(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
	(rule__StringLiteral__ValueAssignment_1)
	{ after(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanLiteral__Group__0__Impl
	rule__BooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
	()
	{ after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1()); }
	(rule__BooleanLiteral__ValueAssignment_1)
	{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condicional__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__0__Impl
	rule__Condicional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getSiEnTuCorazonSientesQueKeyword_0()); }
	'Si en tu corazon sientes que'
	{ after(grammarAccess.getCondicionalAccess().getSiEnTuCorazonSientesQueKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__1__Impl
	rule__Condicional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getCondicionAssignment_1()); }
	(rule__Condicional__CondicionAssignment_1)
	{ after(grammarAccess.getCondicionalAccess().getCondicionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__2__Impl
	rule__Condicional__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getCondicionalAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__3__Impl
	rule__Condicional__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getEntoncesDejaQueEstasPalabrasFlorezcanKeyword_3()); }
	'entonces deja que estas palabras florezcan:'
	{ after(grammarAccess.getCondicionalAccess().getEntoncesDejaQueEstasPalabrasFlorezcanKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__4__Impl
	rule__Condicional__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCondicionalAccess().getInstruccionesThenAssignment_4()); }
		(rule__Condicional__InstruccionesThenAssignment_4)
		{ after(grammarAccess.getCondicionalAccess().getInstruccionesThenAssignment_4()); }
	)
	(
		{ before(grammarAccess.getCondicionalAccess().getInstruccionesThenAssignment_4()); }
		(rule__Condicional__InstruccionesThenAssignment_4)*
		{ after(grammarAccess.getCondicionalAccess().getInstruccionesThenAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__5__Impl
	rule__Condicional__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getGroup_5()); }
	(rule__Condicional__Group_5__0)?
	{ after(grammarAccess.getCondicionalAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getYAsElUniversoSigueSuCursoKeyword_6()); }
	'Y as\u00ED el universo sigue su curso.'
	{ after(grammarAccess.getCondicionalAccess().getYAsElUniversoSigueSuCursoKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condicional__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group_5__0__Impl
	rule__Condicional__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getPeroSiElDestinoDijeraLoContrarioKeyword_5_0()); }
	'Pero si el destino dijera lo contrario,'
	{ after(grammarAccess.getCondicionalAccess().getPeroSiElDestinoDijeraLoContrarioKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group_5__1__Impl
	rule__Condicional__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getQueBrotenEstasVerdadesKeyword_5_1()); }
	'que broten estas verdades:'
	{ after(grammarAccess.getCondicionalAccess().getQueBrotenEstasVerdadesKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCondicionalAccess().getInstruccionesElseAssignment_5_2()); }
		(rule__Condicional__InstruccionesElseAssignment_5_2)
		{ after(grammarAccess.getCondicionalAccess().getInstruccionesElseAssignment_5_2()); }
	)
	(
		{ before(grammarAccess.getCondicionalAccess().getInstruccionesElseAssignment_5_2()); }
		(rule__Condicional__InstruccionesElseAssignment_5_2)*
		{ after(grammarAccess.getCondicionalAccess().getInstruccionesElseAssignment_5_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BucleWhile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleWhile__Group__0__Impl
	rule__BucleWhile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleWhileAccess().getAlternatives_0()); }
	(rule__BucleWhile__Alternatives_0)
	{ after(grammarAccess.getBucleWhileAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleWhile__Group__1__Impl
	rule__BucleWhile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleWhileAccess().getCondicionAssignment_1()); }
	(rule__BucleWhile__CondicionAssignment_1)
	{ after(grammarAccess.getBucleWhileAccess().getCondicionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleWhile__Group__2__Impl
	rule__BucleWhile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleWhileAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getBucleWhileAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleWhile__Group__3__Impl
	rule__BucleWhile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleWhileAccess().getHazQueSucedaKeyword_3()); }
	'haz que suceda:'
	{ after(grammarAccess.getBucleWhileAccess().getHazQueSucedaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleWhile__Group__4__Impl
	rule__BucleWhile__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBucleWhileAccess().getInstruccionesAssignment_4()); }
		(rule__BucleWhile__InstruccionesAssignment_4)
		{ after(grammarAccess.getBucleWhileAccess().getInstruccionesAssignment_4()); }
	)
	(
		{ before(grammarAccess.getBucleWhileAccess().getInstruccionesAssignment_4()); }
		(rule__BucleWhile__InstruccionesAssignment_4)*
		{ after(grammarAccess.getBucleWhileAccess().getInstruccionesAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleWhile__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleWhileAccess().getYAsElSusurroDescansaKeyword_5()); }
	'Y as\u00ED el susurro descansa.'
	{ after(grammarAccess.getBucleWhileAccess().getYAsElSusurroDescansaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BucleFor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__0__Impl
	rule__BucleFor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getAlternatives_0()); }
	(rule__BucleFor__Alternatives_0)
	{ after(grammarAccess.getBucleForAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__1__Impl
	rule__BucleFor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getCondicionAssignment_1()); }
	(rule__BucleFor__CondicionAssignment_1)
	{ after(grammarAccess.getBucleForAccess().getCondicionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__2__Impl
	rule__BucleFor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getHastaKeyword_2()); }
	'hasta'
	{ after(grammarAccess.getBucleForAccess().getHastaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__3__Impl
	rule__BucleFor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getAccionStopAssignment_3()); }
	(rule__BucleFor__AccionStopAssignment_3)
	{ after(grammarAccess.getBucleForAccess().getAccionStopAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__4__Impl
	rule__BucleFor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getBucleForAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__5__Impl
	rule__BucleFor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getYQueGireElVersoKeyword_5()); }
	'y que gire el verso:'
	{ after(grammarAccess.getBucleForAccess().getYQueGireElVersoKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__6__Impl
	rule__BucleFor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBucleForAccess().getInstruccionesAssignment_6()); }
		(rule__BucleFor__InstruccionesAssignment_6)
		{ after(grammarAccess.getBucleForAccess().getInstruccionesAssignment_6()); }
	)
	(
		{ before(grammarAccess.getBucleForAccess().getInstruccionesAssignment_6()); }
		(rule__BucleFor__InstruccionesAssignment_6)*
		{ after(grammarAccess.getBucleForAccess().getInstruccionesAssignment_6()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BucleFor__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBucleForAccess().getCuandoElEcoSeApagueKeyword_7()); }
	'Cuando el eco se apague.'
	{ after(grammarAccess.getBucleForAccess().getCuandoElEcoSeApagueKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Funcion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__0__Impl
	rule__Funcion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getGroup_0()); }
	(rule__Funcion__Group_0__0)
	{ after(grammarAccess.getFuncionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__1__Impl
	rule__Funcion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getGroup_1()); }
	(rule__Funcion__Group_1__0)?
	{ after(grammarAccess.getFuncionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__2__Impl
	rule__Funcion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getCuandoLaPromesaSeCumpleKeyword_2()); }
	'Cuando la promesa se cumple:'
	{ after(grammarAccess.getFuncionAccess().getCuandoLaPromesaSeCumpleKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__3__Impl
	rule__Funcion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFuncionAccess().getInstruccionesAssignment_3()); }
		(rule__Funcion__InstruccionesAssignment_3)
		{ after(grammarAccess.getFuncionAccess().getInstruccionesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getFuncionAccess().getInstruccionesAssignment_3()); }
		(rule__Funcion__InstruccionesAssignment_3)*
		{ after(grammarAccess.getFuncionAccess().getInstruccionesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__4__Impl
	rule__Funcion__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getGroup_4()); }
	(rule__Funcion__Group_4__0)?
	{ after(grammarAccess.getFuncionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getAsSeSellaLaPromesaKeyword_5()); }
	'As\u00ED se sella la promesa.'
	{ after(grammarAccess.getFuncionAccess().getAsSeSellaLaPromesaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Funcion__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_0__0__Impl
	rule__Funcion__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getAlternatives_0_0()); }
	(rule__Funcion__Alternatives_0_0)
	{ after(grammarAccess.getFuncionAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getNameAssignment_0_1()); }
	(rule__Funcion__NameAssignment_0_1)
	{ after(grammarAccess.getFuncionAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Funcion__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_1__0__Impl
	rule__Funcion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getQueGuardaEnSuEsenciaKeyword_1_0()); }
	'que guarda en su esencia'
	{ after(grammarAccess.getFuncionAccess().getQueGuardaEnSuEsenciaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_1__1__Impl
	rule__Funcion__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getParametrosAssignment_1_1()); }
	(rule__Funcion__ParametrosAssignment_1_1)
	{ after(grammarAccess.getFuncionAccess().getParametrosAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getGroup_1_2()); }
	(rule__Funcion__Group_1_2__0)*
	{ after(grammarAccess.getFuncionAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Funcion__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_1_2__0__Impl
	rule__Funcion__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getFuncionAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getParametrosAssignment_1_2_1()); }
	(rule__Funcion__ParametrosAssignment_1_2_1)
	{ after(grammarAccess.getFuncionAccess().getParametrosAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Funcion__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_4__0__Impl
	rule__Funcion__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getYAlFinalDejoVolarKeyword_4_0()); }
	'Y al final, dejo volar'
	{ after(grammarAccess.getFuncionAccess().getYAlFinalDejoVolarKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_4__1__Impl
	rule__Funcion__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getRetornoAssignment_4_1()); }
	(rule__Funcion__RetornoAssignment_4_1)
	{ after(grammarAccess.getFuncionAccess().getRetornoAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getEnUnSuspiroKeyword_4_2()); }
	'en un suspiro.'
	{ after(grammarAccess.getFuncionAccess().getEnUnSuspiroKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__CartasAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getCartasCartaParserRuleCall_0()); }
		ruleCarta
		{ after(grammarAccess.getProgramAccess().getCartasCartaParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__SaludoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCartaAccess().getSaludoSaludoParserRuleCall_0_0()); }
		ruleSaludo
		{ after(grammarAccess.getCartaAccess().getSaludoSaludoParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__CuerpoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCartaAccess().getCuerpoCuerpoParserRuleCall_1_0()); }
		ruleCuerpo
		{ after(grammarAccess.getCartaAccess().getCuerpoCuerpoParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Carta__DespedidaAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCartaAccess().getDespedidaDespedidaParserRuleCall_2_0()); }
		ruleDespedida
		{ after(grammarAccess.getCartaAccess().getDespedidaDespedidaParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Saludo__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSaludoAccess().getNameANYTEXTTerminalRuleCall_1_0()); }
		RULE_ANYTEXT
		{ after(grammarAccess.getSaludoAccess().getNameANYTEXTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Despedida__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDespedidaAccess().getNameANYTEXTTerminalRuleCall_1_0()); }
		RULE_ANYTEXT
		{ after(grammarAccess.getDespedidaAccess().getNameANYTEXTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cuerpo__InstruccionesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCuerpoAccess().getInstruccionesInstruccionParserRuleCall_0()); }
		ruleInstruccion
		{ after(grammarAccess.getCuerpoAccess().getInstruccionesInstruccionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__VerboDeclAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclararAccess().getVerboDeclVerboDeclaracionParserRuleCall_0_0()); }
		ruleVerboDeclaracion
		{ after(grammarAccess.getDeclararAccess().getVerboDeclVerboDeclaracionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__ArticuloAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclararAccess().getArticuloArticuloParserRuleCall_1_0()); }
		ruleArticulo
		{ after(grammarAccess.getDeclararAccess().getArticuloArticuloParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__SustantivoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclararAccess().getSustantivoMI_IDParserRuleCall_2_0()); }
		ruleMI_ID
		{ after(grammarAccess.getDeclararAccess().getSustantivoMI_IDParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__ConectorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclararAccess().getConectorANYTEXTTerminalRuleCall_3_0()); }
		RULE_ANYTEXT
		{ after(grammarAccess.getDeclararAccess().getConectorANYTEXTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__ValorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclararAccess().getValorValorParserRuleCall_4_0()); }
		ruleValor
		{ after(grammarAccess.getDeclararAccess().getValorValorParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarar__ComentarioAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclararAccess().getComentarioAlternatives_5_0()); }
		(rule__Declarar__ComentarioAlternatives_5_0)
		{ after(grammarAccess.getDeclararAccess().getComentarioAlternatives_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__VerboReasAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasignarAccess().getVerboReasVerboReasignacionParserRuleCall_0_0()); }
		ruleVerboReasignacion
		{ after(grammarAccess.getReasignarAccess().getVerboReasVerboReasignacionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__ConectorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasignarAccess().getConectorANYTEXTTerminalRuleCall_1_0()); }
		RULE_ANYTEXT
		{ after(grammarAccess.getReasignarAccess().getConectorANYTEXTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__SustantivoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasignarAccess().getSustantivoMI_IDParserRuleCall_2_0()); }
		ruleMI_ID
		{ after(grammarAccess.getReasignarAccess().getSustantivoMI_IDParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__ValorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasignarAccess().getValorValorParserRuleCall_4_0()); }
		ruleValor
		{ after(grammarAccess.getReasignarAccess().getValorValorParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasignar__ComentarioAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasignarAccess().getComentarioAlternatives_5_0()); }
		(rule__Reasignar__ComentarioAlternatives_5_0)
		{ after(grammarAccess.getReasignarAccess().getComentarioAlternatives_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrada__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntradaAccess().getVariableMI_IDParserRuleCall_1_0()); }
		ruleMI_ID
		{ after(grammarAccess.getEntradaAccess().getVariableMI_IDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salida__ExpresionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSalidaAccess().getExpresionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSalidaAccess().getExpresionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleAccess().getValueAlternatives_0()); }
		(rule__Simple__ValueAlternatives_0)
		{ after(grammarAccess.getSimpleAccess().getValueAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compuesto__CantidadAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompuestoAccess().getCantidadSimpleParserRuleCall_0_0()); }
		ruleSimple
		{ after(grammarAccess.getCompuestoAccess().getCantidadSimpleParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compuesto__MultiplicadorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompuestoAccess().getMultiplicadorMultiplicadorParserRuleCall_1_0()); }
		ruleMultiplicador
		{ after(grammarAccess.getCompuestoAccess().getMultiplicadorMultiplicadorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compuesto__RestoAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompuestoAccess().getRestoSimpleParserRuleCall_2_1_0()); }
		ruleSimple
		{ after(grammarAccess.getCompuestoAccess().getRestoSimpleParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MI_ID__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMI_IDAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getMI_IDAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_2_0()); }
		ruleAndExpr
		{ after(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExprAccess().getRightEqualityExprParserRuleCall_1_2_0()); }
		ruleEqualityExpr
		{ after(grammarAccess.getAndExprAccess().getRightEqualityExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExprAccess().getRightRelationalExprParserRuleCall_1_2_0()); }
		ruleRelationalExpr
		{ after(grammarAccess.getEqualityExprAccess().getRightRelationalExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExprAccess().getOpRelationalOpParserRuleCall_1_1_0()); }
		ruleRelationalOp
		{ after(grammarAccess.getRelationalExprAccess().getOpRelationalOpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExprAccess().getRightAdditiveExprParserRuleCall_1_2_0()); }
		ruleAdditiveExpr
		{ after(grammarAccess.getRelationalExprAccess().getRightAdditiveExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExprAccess().getRightMultiplicativeExprParserRuleCall_1_2_0()); }
		ruleMultiplicativeExpr
		{ after(grammarAccess.getAdditiveExprAccess().getRightMultiplicativeExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExprAccess().getRightUnaryExprParserRuleCall_1_2_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getMultiplicativeExprAccess().getRightUnaryExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__ExprAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getExprPrimaryExprParserRuleCall_0_2_0()); }
		rulePrimaryExpr
		{ after(grammarAccess.getUnaryExprAccess().getExprPrimaryExprParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getNameMI_IDParserRuleCall_0_0()); }
		ruleMI_ID
		{ after(grammarAccess.getFunctionCallAccess().getNameMI_IDParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ArgsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ArgsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getValueAlternatives_1_0()); }
		(rule__BooleanLiteral__ValueAlternatives_1_0)
		{ after(grammarAccess.getBooleanLiteralAccess().getValueAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableRefAccess().getNameMI_IDParserRuleCall_0()); }
		ruleMI_ID
		{ after(grammarAccess.getVariableRefAccess().getNameMI_IDParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__CondicionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondicionalAccess().getCondicionCondicionParserRuleCall_1_0()); }
		ruleCondicion
		{ after(grammarAccess.getCondicionalAccess().getCondicionCondicionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__InstruccionesThenAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondicionalAccess().getInstruccionesThenInstruccionParserRuleCall_4_0()); }
		ruleInstruccion
		{ after(grammarAccess.getCondicionalAccess().getInstruccionesThenInstruccionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__InstruccionesElseAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondicionalAccess().getInstruccionesElseInstruccionParserRuleCall_5_2_0()); }
		ruleInstruccion
		{ after(grammarAccess.getCondicionalAccess().getInstruccionesElseInstruccionParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__CondicionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleWhileAccess().getCondicionCondicionParserRuleCall_1_0()); }
		ruleCondicion
		{ after(grammarAccess.getBucleWhileAccess().getCondicionCondicionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleWhile__InstruccionesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleWhileAccess().getInstruccionesInstruccionParserRuleCall_4_0()); }
		ruleInstruccion
		{ after(grammarAccess.getBucleWhileAccess().getInstruccionesInstruccionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__CondicionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleForAccess().getCondicionCondicionParserRuleCall_1_0()); }
		ruleCondicion
		{ after(grammarAccess.getBucleForAccess().getCondicionCondicionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__AccionStopAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleForAccess().getAccionStopInstruccionParserRuleCall_3_0()); }
		ruleInstruccion
		{ after(grammarAccess.getBucleForAccess().getAccionStopInstruccionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BucleFor__InstruccionesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBucleForAccess().getInstruccionesInstruccionParserRuleCall_6_0()); }
		ruleInstruccion
		{ after(grammarAccess.getBucleForAccess().getInstruccionesInstruccionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getNameMI_IDParserRuleCall_0_1_0()); }
		ruleMI_ID
		{ after(grammarAccess.getFuncionAccess().getNameMI_IDParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__ParametrosAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getParametrosMI_IDParserRuleCall_1_1_0()); }
		ruleMI_ID
		{ after(grammarAccess.getFuncionAccess().getParametrosMI_IDParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__ParametrosAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getParametrosMI_IDParserRuleCall_1_2_1_0()); }
		ruleMI_ID
		{ after(grammarAccess.getFuncionAccess().getParametrosMI_IDParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__InstruccionesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getInstruccionesInstruccionParserRuleCall_3_0()); }
		ruleInstruccion
		{ after(grammarAccess.getFuncionAccess().getInstruccionesInstruccionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__RetornoAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getRetornoMI_IDParserRuleCall_4_1_0()); }
		ruleMI_ID
		{ after(grammarAccess.getFuncionAccess().getRetornoMI_IDParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ANYTEXT : '~' ('a'..'z'|'A'..'Z'|'0'..'9'|'-'|'.'|'('|')'|'\u00BF'|'?'|'\u00A1'|'!'|'\''|'\u2019'|' ')+ '_';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

/*
 * generated by Xtext 2.39.0
 */
grammar InternalDearCode;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package edu.upb.lp.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package edu.upb.lp.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import edu.upb.lp.services.DearCodeGrammarAccess;

}

@parser::members {

 	private DearCodeGrammarAccess grammarAccess;

    public InternalDearCodeParser(TokenStream input, DearCodeGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Program";
   	}

   	@Override
   	protected DearCodeGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProgramRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getProgramAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramAccess().getCartasCartaParserRuleCall_2_0());
				}
				lv_cartas_2_0=ruleCarta
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramRule());
					}
					add(
						$current,
						"cartas",
						lv_cartas_2_0,
						"edu.upb.lp.DearCode.Carta");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleCarta
entryRuleCarta returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCartaRule()); }
	iv_ruleCarta=ruleCarta
	{ $current=$iv_ruleCarta.current; }
	EOF;

// Rule Carta
ruleCarta returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCartaAccess().getSaludoSaludoParserRuleCall_0_0());
				}
				lv_saludo_0_0=ruleSaludo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCartaRule());
					}
					set(
						$current,
						"saludo",
						lv_saludo_0_0,
						"edu.upb.lp.DearCode.Saludo");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCartaAccess().getCuerpoCuerpoParserRuleCall_1_0());
				}
				lv_cuerpo_1_0=ruleCuerpo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCartaRule());
					}
					set(
						$current,
						"cuerpo",
						lv_cuerpo_1_0,
						"edu.upb.lp.DearCode.Cuerpo");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCartaAccess().getDespedidaDespedidaParserRuleCall_2_0());
				}
				lv_despedida_2_0=ruleDespedida
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCartaRule());
					}
					set(
						$current,
						"despedida",
						lv_despedida_2_0,
						"edu.upb.lp.DearCode.Despedida");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSaludo
entryRuleSaludo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSaludoRule()); }
	iv_ruleSaludo=ruleSaludo
	{ $current=$iv_ruleSaludo.current; }
	EOF;

// Rule Saludo
ruleSaludo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Querido compilador:'
		{
			newLeafNode(otherlv_0, grammarAccess.getSaludoAccess().getQueridoCompiladorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSaludoAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSaludoRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDespedida
entryRuleDespedida returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDespedidaRule()); }
	iv_ruleDespedida=ruleDespedida
	{ $current=$iv_ruleDespedida.current; }
	EOF;

// Rule Despedida
ruleDespedida returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Con cari\u00F1o,'
		{
			newLeafNode(otherlv_0, grammarAccess.getDespedidaAccess().getConCariOKeyword_0());
		}
		otherlv_1='Tu programador'
		{
			newLeafNode(otherlv_1, grammarAccess.getDespedidaAccess().getTuProgramadorKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDespedidaAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDespedidaRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getDespedidaAccess().getFullStopKeyword_3());
		}
	)
;

// Entry rule entryRuleCuerpo
entryRuleCuerpo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCuerpoRule()); }
	iv_ruleCuerpo=ruleCuerpo
	{ $current=$iv_ruleCuerpo.current; }
	EOF;

// Rule Cuerpo
ruleCuerpo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getCuerpoAccess().getInstruccionesInstruccionParserRuleCall_0());
			}
			lv_instrucciones_0_0=ruleInstruccion
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getCuerpoRule());
				}
				add(
					$current,
					"instrucciones",
					lv_instrucciones_0_0,
					"edu.upb.lp.DearCode.Instruccion");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleInstruccion
entryRuleInstruccion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstruccionRule()); }
	iv_ruleInstruccion=ruleInstruccion
	{ $current=$iv_ruleInstruccion.current; }
	EOF;

// Rule Instruccion
ruleInstruccion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInstruccionAccess().getCondicionalParserRuleCall_0());
		}
		this_Condicional_0=ruleCondicional
		{
			$current = $this_Condicional_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstruccionAccess().getBucleWhileParserRuleCall_1());
		}
		this_BucleWhile_1=ruleBucleWhile
		{
			$current = $this_BucleWhile_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstruccionAccess().getBucleForParserRuleCall_2());
		}
		this_BucleFor_2=ruleBucleFor
		{
			$current = $this_BucleFor_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCondicion
entryRuleCondicion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCondicionRule()); }
	iv_ruleCondicion=ruleCondicion
	{ $current=$iv_ruleCondicion.current; }
	EOF;

// Rule Condicion
ruleCondicion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getCondicionAccess().getExpressionParserRuleCall());
	}
	this_Expression_0=ruleExpression
	{
		$current = $this_Expression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getOrExprParserRuleCall());
	}
	this_OrExpr_0=ruleOrExpr
	{
		$current = $this_OrExpr_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOrExpr
entryRuleOrExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrExprRule()); }
	iv_ruleOrExpr=ruleOrExpr
	{ $current=$iv_ruleOrExpr.current; }
	EOF;

// Rule OrExpr
ruleOrExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0());
		}
		this_AndExpr_0=ruleAndExpr
		{
			$current = $this_AndExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrExprAccess().getOrExprLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='o quiz\u00E1s'
			{
				newLeafNode(otherlv_2, grammarAccess.getOrExprAccess().getOQuizSKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAndExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExprRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"edu.upb.lp.DearCode.AndExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndExpr
entryRuleAndExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExprRule()); }
	iv_ruleAndExpr=ruleAndExpr
	{ $current=$iv_ruleAndExpr.current; }
	EOF;

// Rule AndExpr
ruleAndExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndExprAccess().getEqualityExprParserRuleCall_0());
		}
		this_EqualityExpr_0=ruleEqualityExpr
		{
			$current = $this_EqualityExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndExprAccess().getAndExprLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='y tambi\u00E9n'
			{
				newLeafNode(otherlv_2, grammarAccess.getAndExprAccess().getYTambiNKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExprAccess().getRightEqualityExprParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleEqualityExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExprRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"edu.upb.lp.DearCode.EqualityExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqualityExpr
entryRuleEqualityExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityExprRule()); }
	iv_ruleEqualityExpr=ruleEqualityExpr
	{ $current=$iv_ruleEqualityExpr.current; }
	EOF;

// Rule EqualityExpr
ruleEqualityExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityExprAccess().getRelationalExprParserRuleCall_0());
		}
		this_RelationalExpr_0=ruleRelationalExpr
		{
			$current = $this_RelationalExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualityExprAccess().getEqualityExprLeftAction_1_0(),
						$current);
				}
			)
			(
				otherlv_2='late al un\u00EDsono con'
				{
					newLeafNode(otherlv_2, grammarAccess.getEqualityExprAccess().getLateAlUnSonoConKeyword_1_1_0());
				}
				    |
				otherlv_3='canta con un matiz distinto a'
				{
					newLeafNode(otherlv_3, grammarAccess.getEqualityExprAccess().getCantaConUnMatizDistintoAKeyword_1_1_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExprAccess().getRightRelationalExprParserRuleCall_1_2_0());
					}
					lv_right_4_0=ruleRelationalExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExprRule());
						}
						set(
							$current,
							"right",
							lv_right_4_0,
							"edu.upb.lp.DearCode.RelationalExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRelationalExpr
entryRuleRelationalExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationalExprRule()); }
	iv_ruleRelationalExpr=ruleRelationalExpr
	{ $current=$iv_ruleRelationalExpr.current; }
	EOF;

// Rule RelationalExpr
ruleRelationalExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationalExprAccess().getAdditiveExprParserRuleCall_0());
		}
		this_AdditiveExpr_0=ruleAdditiveExpr
		{
			$current = $this_AdditiveExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getRelationalExprAccess().getRelationalExprLeftAction_1_0(),
						$current);
				}
			)
			(
				otherlv_2='susurra con menos fuerza que '
				{
					newLeafNode(otherlv_2, grammarAccess.getRelationalExprAccess().getSusurraConMenosFuerzaQueKeyword_1_1_0());
				}
				    |
				otherlv_3='arde con mas pasion que'
				{
					newLeafNode(otherlv_3, grammarAccess.getRelationalExprAccess().getArdeConMasPasionQueKeyword_1_1_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationalExprAccess().getRightAdditiveExprParserRuleCall_1_2_0());
					}
					lv_right_4_0=ruleAdditiveExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationalExprRule());
						}
						set(
							$current,
							"right",
							lv_right_4_0,
							"edu.upb.lp.DearCode.AdditiveExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAdditiveExpr
entryRuleAdditiveExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditiveExprRule()); }
	iv_ruleAdditiveExpr=ruleAdditiveExpr
	{ $current=$iv_ruleAdditiveExpr.current; }
	EOF;

// Rule AdditiveExpr
ruleAdditiveExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditiveExprAccess().getMultiplicativeExprParserRuleCall_0());
		}
		this_MultiplicativeExpr_0=ruleMultiplicativeExpr
		{
			$current = $this_MultiplicativeExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAdditiveExprAccess().getAdditiveExprLeftAction_1_0(),
						$current);
				}
			)
			(
				otherlv_2='unidos en un solo suspiro con'
				{
					newLeafNode(otherlv_2, grammarAccess.getAdditiveExprAccess().getUnidosEnUnSoloSuspiroConKeyword_1_1_0());
				}
				    |
				otherlv_3='fundidos en la llama de'
				{
					newLeafNode(otherlv_3, grammarAccess.getAdditiveExprAccess().getFundidosEnLaLlamaDeKeyword_1_1_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExprAccess().getRightMultiplicativeExprParserRuleCall_1_2_0());
					}
					lv_right_4_0=ruleMultiplicativeExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExprRule());
						}
						set(
							$current,
							"right",
							lv_right_4_0,
							"edu.upb.lp.DearCode.MultiplicativeExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplicativeExpr
entryRuleMultiplicativeExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicativeExprRule()); }
	iv_ruleMultiplicativeExpr=ruleMultiplicativeExpr
	{ $current=$iv_ruleMultiplicativeExpr.current; }
	EOF;

// Rule MultiplicativeExpr
ruleMultiplicativeExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicativeExprAccess().getUnaryExprParserRuleCall_0());
		}
		this_UnaryExpr_0=ruleUnaryExpr
		{
			$current = $this_UnaryExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMultiplicativeExprAccess().getMultiplicativeExprLeftAction_1_0(),
						$current);
				}
			)
			(
				otherlv_2='fortalecidos por el fuego de'
				{
					newLeafNode(otherlv_2, grammarAccess.getMultiplicativeExprAccess().getFortalecidosPorElFuegoDeKeyword_1_1_0());
				}
				    |
				otherlv_3='Separados entre los ecos de'
				{
					newLeafNode(otherlv_3, grammarAccess.getMultiplicativeExprAccess().getSeparadosEntreLosEcosDeKeyword_1_1_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExprAccess().getRightUnaryExprParserRuleCall_1_2_0());
					}
					lv_right_4_0=ruleUnaryExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExprRule());
						}
						set(
							$current,
							"right",
							lv_right_4_0,
							"edu.upb.lp.DearCode.UnaryExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExprRule()); }
	iv_ruleUnaryExpr=ruleUnaryExpr
	{ $current=$iv_ruleUnaryExpr.current; }
	EOF;

// Rule UnaryExpr
ruleUnaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryExprAccess().getNotExprAction_0_0(),
						$current);
				}
			)
			otherlv_1='no lo creo'
			{
				newLeafNode(otherlv_1, grammarAccess.getUnaryExprAccess().getNoLoCreoKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExprAccess().getExprPrimaryExprParserRuleCall_0_2_0());
					}
					lv_expr_2_0=rulePrimaryExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExprRule());
						}
						set(
							$current,
							"expr",
							lv_expr_2_0,
							"edu.upb.lp.DearCode.PrimaryExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getUnaryExprAccess().getPrimaryExprParserRuleCall_1());
		}
		this_PrimaryExpr_3=rulePrimaryExpr
		{
			$current = $this_PrimaryExpr_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimaryExpr
entryRulePrimaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprRule()); }
	iv_rulePrimaryExpr=rulePrimaryExpr
	{ $current=$iv_rulePrimaryExpr.current; }
	EOF;

// Rule PrimaryExpr
rulePrimaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryExprAccess().getLiteralParserRuleCall_0());
		}
		this_Literal_0=ruleLiteral
		{
			$current = $this_Literal_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExprAccess().getVariableRefParserRuleCall_1());
		}
		this_VariableRef_1=ruleVariableRef
		{
			$current = $this_VariableRef_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExprAccess().getSpecialBooleanParserRuleCall_2());
		}
		this_SpecialBoolean_2=ruleSpecialBoolean
		{
			$current = $this_SpecialBoolean_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimaryExprAccess().getLeftParenthesisKeyword_3_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getExpressionParserRuleCall_3_1());
			}
			this_Expression_4=ruleExpression
			{
				$current = $this_Expression_4.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_3_2());
			}
		)
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_0());
		}
		this_IntLiteral_0=ruleIntLiteral
		{
			$current = $this_IntLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_1());
		}
		this_StringLiteral_1=ruleStringLiteral
		{
			$current = $this_StringLiteral_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_2());
		}
		this_BooleanLiteral_2=ruleBooleanLiteral
		{
			$current = $this_BooleanLiteral_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntLiteral
entryRuleIntLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntLiteralRule()); }
	iv_ruleIntLiteral=ruleIntLiteral
	{ $current=$iv_ruleIntLiteral.current; }
	EOF;

// Rule IntLiteral
ruleIntLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIntLiteralAccess().getIntLiteralAction_0(),
					$current);
			}
		)
		(
			(
				lv_value_1_0=RULE_INT
				{
					newLeafNode(lv_value_1_0, grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStringLiteralAccess().getStringLiteralAction_0(),
					$current);
			}
		)
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); }
	iv_ruleBooleanLiteral=ruleBooleanLiteral
	{ $current=$iv_ruleBooleanLiteral.current; }
	EOF;

// Rule BooleanLiteral
ruleBooleanLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_value_1_1='siempre'
					{
						newLeafNode(lv_value_1_1, grammarAccess.getBooleanLiteralAccess().getValueSiempreKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanLiteralRule());
						}
						setWithLastConsumed($current, "value", lv_value_1_1, null);
					}
					    |
					lv_value_1_2='jam\u00E1s'
					{
						newLeafNode(lv_value_1_2, grammarAccess.getBooleanLiteralAccess().getValueJamSKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanLiteralRule());
						}
						setWithLastConsumed($current, "value", lv_value_1_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleVariableRef
entryRuleVariableRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRefRule()); }
	iv_ruleVariableRef=ruleVariableRef
	{ $current=$iv_ruleVariableRef.current; }
	EOF;

// Rule VariableRef
ruleVariableRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getVariableRefAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVariableRefRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleSpecialBoolean
entryRuleSpecialBoolean returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecialBooleanRule()); }
	iv_ruleSpecialBoolean=ruleSpecialBoolean
	{ $current=$iv_ruleSpecialBoolean.current; }
	EOF;

// Rule SpecialBoolean
ruleSpecialBoolean returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='a\u00FAn me piensas'
		{
			newLeafNode(otherlv_0, grammarAccess.getSpecialBooleanAccess().getANMePiensasKeyword_0());
		}
		    |
		otherlv_1='tu voz me alcanza'
		{
			newLeafNode(otherlv_1, grammarAccess.getSpecialBooleanAccess().getTuVozMeAlcanzaKeyword_1());
		}
	)
;

// Entry rule entryRuleCondicional
entryRuleCondicional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCondicionalRule()); }
	iv_ruleCondicional=ruleCondicional
	{ $current=$iv_ruleCondicional.current; }
	EOF;

// Rule Condicional
ruleCondicional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Si en tu corazon sientes que'
			{
				newLeafNode(otherlv_0, grammarAccess.getCondicionalAccess().getSiEnTuCorazonSientesQueKeyword_0_0());
			}
			    |
			otherlv_1='Si en tu alma nace el deseo de que'
			{
				newLeafNode(otherlv_1, grammarAccess.getCondicionalAccess().getSiEnTuAlmaNaceElDeseoDeQueKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCondicionalAccess().getCondicionCondicionParserRuleCall_1_0());
				}
				lv_condicion_2_0=ruleCondicion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCondicionalRule());
					}
					set(
						$current,
						"condicion",
						lv_condicion_2_0,
						"edu.upb.lp.DearCode.Condicion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getCondicionalAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCondicionalAccess().getAccionInstruccionParserRuleCall_3_0());
				}
				lv_accion_4_0=ruleInstruccion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCondicionalRule());
					}
					set(
						$current,
						"accion",
						lv_accion_4_0,
						"edu.upb.lp.DearCode.Instruccion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='Y si el destino dijera lo contrario,'
			{
				newLeafNode(otherlv_5, grammarAccess.getCondicionalAccess().getYSiElDestinoDijeraLoContrarioKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCondicionalAccess().getAccionElseInstruccionParserRuleCall_4_1_0());
					}
					lv_accionElse_6_0=ruleInstruccion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCondicionalRule());
						}
						set(
							$current,
							"accionElse",
							lv_accionElse_6_0,
							"edu.upb.lp.DearCode.Instruccion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleBucleWhile
entryRuleBucleWhile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBucleWhileRule()); }
	iv_ruleBucleWhile=ruleBucleWhile
	{ $current=$iv_ruleBucleWhile.current; }
	EOF;

// Rule BucleWhile
ruleBucleWhile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Mientras aun me pienses'
			{
				newLeafNode(otherlv_0, grammarAccess.getBucleWhileAccess().getMientrasAunMePiensesKeyword_0_0());
			}
			    |
			otherlv_1='Mientras a\u00FAn sue\u00F1es con este momento, haz que ocurra'
			{
				newLeafNode(otherlv_1, grammarAccess.getBucleWhileAccess().getMientrasANSueEsConEsteMomentoHazQueOcurraKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBucleWhileAccess().getCondicionCondicionParserRuleCall_1_0());
				}
				lv_condicion_2_0=ruleCondicion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBucleWhileRule());
					}
					set(
						$current,
						"condicion",
						lv_condicion_2_0,
						"edu.upb.lp.DearCode.Condicion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getBucleWhileAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBucleWhileAccess().getAccionInstruccionParserRuleCall_3_0());
				}
				lv_accion_4_0=ruleInstruccion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBucleWhileRule());
					}
					set(
						$current,
						"accion",
						lv_accion_4_0,
						"edu.upb.lp.DearCode.Instruccion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBucleFor
entryRuleBucleFor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBucleForRule()); }
	iv_ruleBucleFor=ruleBucleFor
	{ $current=$iv_ruleBucleFor.current; }
	EOF;

// Rule BucleFor
ruleBucleFor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Cada dia, desde'
			{
				newLeafNode(otherlv_0, grammarAccess.getBucleForAccess().getCadaDiaDesdeKeyword_0_0());
			}
			    |
			otherlv_1='Por cada suspiro desde'
			{
				newLeafNode(otherlv_1, grammarAccess.getBucleForAccess().getPorCadaSuspiroDesdeKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBucleForAccess().getCondicionCondicionParserRuleCall_1_0());
				}
				lv_condicion_2_0=ruleCondicion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBucleForRule());
					}
					set(
						$current,
						"condicion",
						lv_condicion_2_0,
						"edu.upb.lp.DearCode.Condicion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='hasta'
		{
			newLeafNode(otherlv_3, grammarAccess.getBucleForAccess().getHastaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBucleForAccess().getAccionStopInstruccionParserRuleCall_3_0());
				}
				lv_accionStop_4_0=ruleInstruccion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBucleForRule());
					}
					set(
						$current,
						"accionStop",
						lv_accionStop_4_0,
						"edu.upb.lp.DearCode.Instruccion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getBucleForAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBucleForAccess().getAccionInstruccionParserRuleCall_5_0());
				}
				lv_accion_6_0=ruleInstruccion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBucleForRule());
					}
					set(
						$current,
						"accion",
						lv_accion_6_0,
						"edu.upb.lp.DearCode.Instruccion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

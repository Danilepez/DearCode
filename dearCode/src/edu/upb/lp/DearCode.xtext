grammar edu.upb.lp.DearCode with org.eclipse.xtext.common.Terminals

generate dearCode "http://www.upb.edu/lp/DearCode"

Program:
	cartas+=Carta+               
;

Carta:
	saludo=Saludo
	cuerpo=Cuerpo
	despedida=Despedida
;

Saludo:
	('Querido'|'Querida') name=ANYTEXT
;

Despedida:
	'Con cariño, Tu programador' name=ANYTEXT
;

Cuerpo:
	instrucciones+=Instruccion+
;

Instruccion:
	Declarar | Reasignar | Condicional | BucleWhile | BucleFor
;

Declarar:
	verboDecl=VerboDeclaracion
	articulo=Articulo
	sustantivo=MI_ID
	conector=ANYTEXT
	valor=Valor
	comentario=(ANYTEXT | STRING)?       
	'.'
;

Reasignar:
	verboReas=VerboReasignacion
	conector=ANYTEXT
	sustantivo=MI_ID
	'con'
	valor=Valor
	comentario=(ANYTEXT| STRING)?
	'.'
;


Valor:
	MI_ID | NumeroLiteral    
;


NumeroLiteral:
	Simple | Compuesto     
;

Simple:
	value=('cero' | 'uno' | 'dos' | 'tres' | 'cuatro' | 'cinco' | 'seis' | 'siete' | 'ocho' | 'nueve')
;


Compuesto:
	cantidad=Simple multiplicador=Multiplicador ('y' resto=Simple)?
;

Multiplicador:
	'decena' ('s')? | 'centena' ('s')? | 'millar' ('es')?   
;

Articulo:
	'un' | 'una'
;

VerboDeclaracion:
	'Te regalo' | 'Ofrezco' | 'Obsequio' | 'Deposito en tu jardín'
;

VerboReasignacion:
	'Permíteme' 'alimentar' | 'Permíteme' 'regar' | 'Permíteme' 'ajustar'
;

MI_ID:
     '@' name=ID
;

terminal ANYTEXT:
	'_'
    ( 'a'..'z' | 'A'..'Z' | '0'..'9' 
    | '-' | '.' | '(' | ')' 
    | '¿' | '?' | '¡' | '!' 
    | '\'' | '’'
    | ' '
    )+ 
    ('...' | '.' | ':')
;



//Expresiones, condicionales y bucles
Condicion:
    Expression
;


Expression:
    OrExpr;

OrExpr returns Expression:
    AndExpr ({OrExpr.left=current} 'o quizás' right=AndExpr)*;

AndExpr returns Expression:
    EqualityExpr ({AndExpr.left=current} 'y también' right=EqualityExpr)*;

EqualityExpr returns Expression:
    RelationalExpr ({EqualityExpr.left=current} ('late al unísono con' | 'canta con un matiz distinto a') right=RelationalExpr)*;

RelationalExpr returns Expression:
    AdditiveExpr
    ({RelationalExpr.left=current}
        'susurra con menos fuerza que' right=AdditiveExpr
      | 'casi suspira al mismo nivel que' right=AdditiveExpr
      | 'arde con más pasión que' right=AdditiveExpr
      | 'rodea con tanta fuerza como' right=AdditiveExpr
    )*
;

AdditiveExpr returns Expression:
    MultiplicativeExpr ({AdditiveExpr.left=current} ('unidos en un solo suspiro con'  | 'fundidos en la llama de') right=MultiplicativeExpr)*;

MultiplicativeExpr returns Expression:
    UnaryExpr ({MultiplicativeExpr.left=current} ('fortalecidos por el fuego de' | 'separados entre los ecos de') right=UnaryExpr)*;

UnaryExpr returns Expression:
    {NotExpr} 'no lo creo' expr=PrimaryExpr
  | PrimaryExpr;

PrimaryExpr returns Expression:
    Literal| VariableRef | SpecialBoolean | '(' Expression ')';

Literal returns Expression:
    IntLiteral | StringLiteral | BooleanLiteral
;
IntLiteral:
    {IntLiteral} value=INT
;	
StringLiteral:
    {StringLiteral} value=STRING
;

BooleanLiteral:
    {BooleanLiteral} value=('siempre' | 'jamás')
;

  
VariableRef:
    name=MI_ID;              

SpecialBoolean returns Expression:
    'aún me piensas' | 'tu voz me alcanza';


Condicional:
    ('Si en tu corazon sientes que'| 'Si en tu alma nace el deseo de que'  ) condicion=Condicion ',' accion=Instruccion
    ('Y si el destino dijera lo contrario,' accionElse=Instruccion)?;

BucleWhile:
    ( 'Mientras aun me pienses'| 'Mientras aún sueñes con este momento, haz que ocurra' )
    condicion=Condicion ',' accion=Instruccion;

BucleFor:
    ( 'Cada dia, desde'| 'Por cada suspiro desde' )
    condicion=Condicion 'hasta' accionStop=Instruccion ',' accion=Instruccion;